<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Oddmatics.RozWorld.API</name>
    </assembly>
    <members>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerLogInEventHandler">
            <summary>
            Represents the method that will handle the PlayerLogIn event of an IRwServer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A PlayerLogInEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerLogInEventArgs">
            <summary>
            Provides data for the IRwServer.PlayerLogIn event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.PlayerLogInEventArgs.#ctor(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Initialises a new instance of the PlayerLogInEventArgs class with a Player instance.
            </summary>
            <param name="player">The Player instance that has been logged in.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerLogInEventArgs.Player">
            <summary>
            Gets the Player instance that has been logged in.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.IAccount">
            <summary>
            Represents a user's account.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccount.CheckAccountPermission(System.String)">
            <summary>
            Checks the PermissionState of a given permission for this IAccount (not checking IPermissionGroup membership).
            </summary>
            <param name="key">The permission key to check by.</param>
            <returns>The PermissionState of the permission associated with the given key.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccount.HasPermission(System.String)">
            <summary>
            Gets whether this IAccount has a certain permission by checking its own permissions and its IPermissionGroup membership.
            </summary>
            <param name="key">The permission key to check for.</param>
            <returns>Whether or not the permission associated with the given key is granted.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccount.Save(System.String)">
            <summary>
            Saves this IAccount's data to the disk.
            </summary>
            <param name="destination">Specify a destination in which to export the data to.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccount.SetAccountPermission(System.String,Oddmatics.RozWorld.API.Server.Accounts.PermissionState)">
            <summary>
            Sets the PermissionState of a permission exclusively for this IAccount.
            </summary>
            <param name="key">The permission key to set by.</param>
            <param name="newState">The new PermissionState to set.</param>
            <returns>True if the PermissionState was set for the specified permission.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccount.SetPermissionGroup(System.String)">
            <summary>
            Sets the IPermissionGroup this IAccount is assigned to.
            </summary>
            <param name="name">The name of the IPermissionGroup to assign.</param>
            <returns>True if the IPermissionGroup of the specified name was set for this IAccount.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.ChatPrefix">
            <summary>
            Gets or sets the prefix to apply to the name of the player associated with this IAccount when they sent a chat message.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.ChatSuffix">
            <summary>
            Gets or sets the suffix to apply to the name of the player associated with this IAccount when they sent a chat message.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.Clan">
            <summary>
            Gets the IClan that the user of this IAccount belongs to.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.ColourModifier">
            <summary>
            Gets or sets the colour to apply to the name of the player associated with this IAccount when they sent a chat message.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.CreationDate">
            <summary>
            Gets the creation date of the account associated with this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.CreationIP">
            <summary>
            Gets the creation IP of the account associated with this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.DisplayName">
            <summary>
            Gets or sets the display name of this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.Fqn">
            <summary>
            Gets the fully-qualified name of this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.IsPlayer">
            <summary>
            Gets whether this IAccount has an associated Player instance.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.LastLoginIP">
            <summary>
            Gets the IP of the last login of the account associated with this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.LocalPermissions">
            <summary>
            Gets the individual permissions granted to this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.PermissionGroup">
            <summary>
            Gets the IPermissionGroup this IAccount is assigned to.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.Permissions">
            <summary>
            Gets all permissions that this IAccount has, including those granted specifically and those obtained as part of a group.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.PlayerInstance">
            <summary>
            Gets the associated Player instance of this IAccount.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccount.Username">
            <summary>
            Gets the username of the player of this IAccount.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.IPictureBox">
            <summary>
            Represents a static picture box control on the interface.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.IControl">
            <summary>
            Represents a single interface control inside of a Form.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.Invalidate(System.Int32[])">
            <summary>
            Inform the renderer that the specified parts must be redrawn.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.Active">
            <summary>
            Gets or sets whether this IControl is active.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.ControlAbove">
            <summary>
            Gets or sets the IControl that is above this IControl, and will be selected when moving up.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.ControlBelow">
            <summary>
            Gets or sets the IControl that is below this IControl, and will be selected when moving down.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.ControlLeft">
            <summary>
            Gets or sets the IControl that is on the left of this IControl, and will be selected when moving left.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.ControlRight">
            <summary>
            Gets or sets the IControl that is on the right of this IControl, and will be selected when moving right.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.Location">
            <summary>
            Gets or sets the Location of this IControl.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.Name">
            <summary>
            Gets or sets the name of this IControl.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.Parent">
            <summary>
            Gets the parent Form of this IControl.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.CursorEnter">
            <summary>
            Occurs when the cursor enters the bounds of this control.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Client.Interface.Control.IControl.CursorLeave">
            <summary>
            Occurs when the cursor leaves the bounds of this control.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IPictureBox.SizeMode">
            <summary>
            The sizing mode to use on the image.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.IPictureBox.Source">
            <summary>
            The source image filepath to use.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.ILogger">
            <summary>
            Represents a logger for RozWorld client or server.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.ILogger.Out(System.String,Oddmatics.RozWorld.API.Generic.LogLevel,System.Boolean)">
            <summary>
            Outputs a message into the logger.
            </summary>
            <param name="message">The message to output.</param>
            <param name="level">The log level of the message.</param>
            <param name="colours">Allow colours in the logged message.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop">
            <summary>
            Represents an object that is able to act like a shop
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.Buy(Oddmatics.RozWorld.API.Server.Entities.Player,System.Int32)">
            <summary>
            Buys an item from this IShop.
            </summary>
            <param name="player">The Player instance.</param>
            <param name="itemIndex">The index of the item to purchase.</param>
            <returns>True if the item was bought successfully.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.CanSell(Oddmatics.RozWorld.API.Server.Item.IItem)">
            <summary>
            Evaluates whether the specified IItem can be sold at this IShop.
            </summary>
            <param name="item">The IItem to evaluate.</param>
            <returns>True if the specified IItem can be sold at this IShop.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.GetListings(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Gets the item listings for this shop.
            </summary>
            <param name="player">The Player instance.</param>
            <returns>The item listings fit for the Player specified, as an IList&lt;IShopItem&gt; collection.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.Sell(Oddmatics.RozWorld.API.Server.Entities.Player,Oddmatics.RozWorld.API.Server.Item.IItem,System.Int32)">
            <summary>
            Sells an item to this IShop.
            </summary>
            <param name="player">The Player instance.</param>
            <param name="item">The IItem being sold.</param>
            <param name="quantity">The amount to sell to this IShop.</param>
            <returns>True if the item was sold successfully.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.AllItems">
            <summary>
            Gets the complete listing of all items for this IShop as an IList&lt;IShopItem&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShop.ShopName">
            <summary>
            Gets or sets the name of this IShop.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.IContentManager">
            <summary>
            Represents a content manager for accessing factory systems.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IContentManager.RegisterEntity(System.Type)">
            <summary>
            Registers an Entity Type to this IContentManager.
            </summary>
            <param name="entityType">The Entity's Type to register.</param>
            <returns>True if the Type is not already registered.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IContentManager.RegisterEntityState(System.Byte,System.Type)">
            <summary>
            Registers an animation state for an Entity.
            </summary>
            <param name="state">The state to register.</param>
            <param name="entityType">The Entity's Type that owns the animation state.</param>
            <returns>True if the state has not been registered for the given Entity Type and the Entity Type is also registered.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.IContentManager.EntityFactory">
            <summary>
            Gets this IContentManager's IEntityFactory.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.ItemSellableDelegate">
            <summary>
            Represents the method that will be called by IShop.CanSell() if it has been attached.
            </summary>
            <param name="shop">The IShop instance that issued the call.</param>
            <param name="item">The IItem to evaluate.</param>
            <returns>True if the IItem can be sold at the IShop sender.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.HealthChangedEventHandler">
            <summary>
            Represents the method that will handle the HealthChanged event of a LivingEntity.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A HealthChangedEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.HealthChangedEventArgs">
            <summary>
            Provides data for the LivingEntity.HealthChanged event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.HealthChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the HealthChangedEventArgs class with health difference and new health properties.
            </summary>
            <param name="difference">The health change that occurred.</param>
            <param name="newHealth">The new health.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthChangedEventArgs.Difference">
            <summary>
            Gets the health change that occurred.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthChangedEventArgs.NewHealth">
            <summary>
            Gets the new health.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.ChatHookCallback">
            <summary>
            Represents the method that will be called when hooked to ICommandCaller's chat message sending session.
            </summary>
            <param name="sender">The ICommandCaller that was hooked and sent the message.</param>
            <param name="message">The message that was sent.</param>
            <returns>True if the hook executed successfully.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Game.GameMode">
            <summary>
            Specifies constants defining the game mode that RozWorld will play as.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.GameMode.Adventure">
            <summary>
            Represents the adventure mode, no story/major quest will be generated.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.GameMode.Books">
            <summary>
            Represents the books mode, stories/major quests will be generated.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Renderer">
            <summary>
            Represents a graphics renderer for the RozWorld client.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Renderer.Initialise">
            <summary>
            Initialises this Renderer.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Renderer.SetWindows(System.Byte)">
            <summary>
            Attempts to set the amount of live windows.
            </summary>
            <param name="count">The amount of windows to set.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Renderer.SetWindowSize(System.Byte,System.Int16,System.Int16)">
            <summary>
            Sets the size of a given window.
            </summary>
            <param name="window">The index of the window.</param>
            <param name="width">The new width.</param>
            <param name="height">The new height</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Renderer.Initialised">
            <summary>
            Gets whether this Renderer is initialised.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Renderer.InputUpdateCallback">
            <summary>
            Gets the InputUpdateCallback for this Renderer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Renderer.WindowCount">
            <summary>
            Gets the amount of windows active.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.InputType">
            <summary>
            Specifies constants defining the current input status update.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.KeyboardKeyPress">
            <summary>
            Represents a keyboard key being pressed down.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.KeyboardKeyRelease">
            <summary>
            Represents a keyboard key being released.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.MouseButtonPress">
            <summary>
            Represents a mouse button being pressed down.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.MouseButtonRelease">
            <summary>
            Represents a mouse button being released.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxButtonPress">
            <summary>
            Represents an Xbox 360 controller button being pressed down.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxControllerActivated">
            <summary>
            Represents an Xbox 360 controller being plugged in or otherwise activated.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxControllerDeactivated">
            <summary>
            Represents an Xbox 360 controller being unplugged or otherwise deactivated.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxButtonRelease">
            <summary>
            Represents an Xbox 360 controller button being released.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxLeftAnalogXAt">
            <summary>
            Represents an Xbox 360 controller's left analog stick being moved horizontally.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxLeftAnalogYAt">
            <summary>
            Represents an Xbox 360 controller's left analog stick being moved vertically.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxLeftTriggerAt">
            <summary>
            Represents an Xbox 360 controller's left trigger being moved.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxRightAnalogXAt">
            <summary>
            Represents an Xbox 360 controller's right analog stick being moved horizontally.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxRightAnalogYAt">
            <summary>
            Represents an Xbox 360 controller's right analog stick being moved vertically.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.InputType.XboxRightTriggerAt">
            <summary>
            Represents an Xbox 360 controller's right trigger being moved.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.ILocalProfile">
            <summary>
            Represents a local player profile.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.ILocalProfile.InputPreferences">
            <summary>
            Gets the input preferences for this ILocalProfile.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.ILocalProfile.Name">
            <summary>
            Gets the name of this ILocalProfile.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup">
            <summary>
            Represents a permission group that defines player account rules.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.AddPermission(System.String)">
            <summary>
            Adds a permission to this IPermissionGroup.
            </summary>
            <param name="key">The permission key to try to add.</param>
            <returns>True if the this IPermissionGroup grants the permission (regardless of whether it already granted it).</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.HasPermission(System.String)">
            <summary>
            Checks whether a player's in this IPermissionGroup have the specified permission.
            </summary>
            <param name="key">The permission key to check for.</param>
            <returns>True if this IPermissionGroup grants the specified permission.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.RecalculateMembers">
            <summary>
            Evaluates all accounts to locate members of this IPermissionGroup.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.RemovePermission(System.String)">
            <summary>
            Removes a permission from this IPermissionGroup.
            </summary>
            <param name="key">The permission key to remove.</param>
            <returns>True if this IPermissionGroup does not grant the permission (regardless of whether it never granted it).</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.Save(System.String)">
            <summary>
            Saves this IPermissionGroup's data to the disk.
            </summary>
            <param name="destination">Specify a destination in which to export the data to.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.ChatPrefix">
            <summary>
            Gets or sets the prefix to apply to names of players in this IPermissionGroup when they send chat messages.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.ChatSuffix">
            <summary>
            Gets or sets the suffix to apply to names of players in this IPermissionGroup when they send chat messages.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.ColourModifier">
            <summary>
            Gets or sets the colour to apply to names of player in this IPermissionGroup when they send chat messages.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.IsDefault">
            <summary>
            Gets or sets whether this IPermissionGroup is the server's default.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.Permissions">
            <summary>
            Gets an IList&lt;string&gt; collection representing the permissions granted in this IPermissionGroup.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.Members">
            <summary>
            Gets an IList&lt;IAccount&gt; collection represents the members of this IPermissionGroup.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionGroup.Name">
            <summary>
            Gets or sets the name of this IPermissionGroup.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic">
            <summary>
            Container for chat graphics.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_A_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's A button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_B_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's B button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_X_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's X button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_Y_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Y button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_GUIDE_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Guide button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_BACK_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Back button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_START_BUTTON">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Start button.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_LEFT_BUMPER">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Left Bumper.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_RIGHT_BUMPER">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Right Bumper.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_LEFT_TRIGGER">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Left Trigger.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_RIGHT_TRIGGER">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Right Trigger.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_LEFT_STICK">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Left Stick.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_RIGHT_STICK">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's Right Stick.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.XBOX_DPAD">
            <summary>
            Represents a graphic icon of an Xbox 360 controller's D-Pad.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_JROLL">
            <summary>
            Represents a graphic emote of Jroll's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_VALENTINO">
            <summary>
            Represents a graphic emote of Jay Valentino's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_BENNYV">
            <summary>
            Represents a graphic emote of BENNVA's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_RIG">
            <summary>
            Represents a graphic emote of RIG's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_ROZ">
            <summary>
            Represents a graphic emote of rozza's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_SWEET">
            <summary>
            Represents a graphic emote of Sweaty Sweet's mug.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.EMOTE_MARLOW">
            <summary>
            Represents a graphic emote of Satan's mug.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Chat.ChatGraphic.IsGraphic(System.Char)">
            <summary>
            Gets whether the specified character is a special graphic character.
            </summary>
            <param name="subject">The character to check.</param>
            <returns>True the specified character is a special graphic character.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.RendererInfo">
            <summary>
            Represents information regarding a graphics renderer for the RozWorld client.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.RendererInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Type)">
            <summary>
            Initialises a new instance of the RendererInfo class with information about a renderer.
            </summary>
            <param name="name">The name of the renderer.</param>
            <param name="version">The nice version string for the renderer.</param>
            <param name="internalVersion">The internal version number of the renderer.</param>
            <param name="author">The author of the renderer.</param>
            <param name="description">A description about the renderer.</param>
            <param name="rendererType">The Type object to use to create the renderer from.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.Author">
            <summary>
            Gets the author of the renderer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.Description">
            <summary>
            Gets the description about the renderer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.InternalVersion">
            <summary>
            Gets the internal version number of the renderer
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.Name">
            <summary>
            Gets the name of the renderer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.RendererType">
            <summary>
            Gets the Type object used to create the renderer from.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.Valid">
            <summary>
            Gets whether this RendererInfo is valid.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.RendererInfo.Version">
            <summary>
            Gets the nice version string of the renderer.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IXboxController">
            <summary>
            Represents an Xbox 360 controller.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.Active">
            <summary>
            Gets whether this Xbox controller is plugged in.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.ButtonsDown">
            <summary>
            Gets the currently pressed buttons as an IList&lt;byte&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.ButtonsUp">
            <summary>
            Gets the currently released buttons as an IList&lt;byte&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.LeftAnalogX">
            <summary>
            Gets the amount of horizontal movement for the left analog stick.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.LeftAnalogY">
            <summary>
            Gets the amount of vertical movement for the left analog stick.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.LeftTriggerZ">
            <summary>
            Gets the amount that the left trigger is pressed by.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.RightAnalogX">
            <summary>
            Gets the amount of horizontal movement for the right analog stick.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.RightAnalogY">
            <summary>
            Gets the amount of vertical movement for the right analog stick.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IXboxController.RightTriggerZ">
            <summary>
            Gets the amount that the right trigger is pressed by.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.ControlMethod">
            <summary>
            Specifies constants defining a selected method of input.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.KeyboardAndMouse">
            <summary>
            Represents that input will be read from the attached keyboard and mouse.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.KeyboardOnly">
            <summary>
            Represents that input will be read from the keyboard only.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.Unset">
            <summary>
            Represents that no input method has been specified.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.XboxControllerOne">
            <summary>
            Represents that input will be read from the first Xbox 360 controller.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.XboxControllerTwo">
            <summary>
            Represents that input will be read from the second Xbox 360 controller.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.XboxControllerThree">
            <summary>
            Represents that input will be read from the third Xbox 360 controller.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Input.ControlMethod.XboxControllerFour">
            <summary>
            Represents that input will be read from the fourth Xbox 360 controller.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Entities.Player">
            <summary>
            Represents a RozWorld player entity.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Entities.LivingEntity">
            <summary>
            Represents a living entity in a world.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Entities.Entity">
            <summary>
            Represents an entity that exists in a world.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.ApplyForce(Oddmatics.RozWorld.API.Generic.Vector)">
            <summary>
            Applies a force onto this Entity.
            </summary>
            <param name="force">The force Vector to apply.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.Attack(Oddmatics.RozWorld.API.Server.Entities.Entity)">
            <summary>
            Attacks an Entity.
            </summary>
            <param name="entity">The Entity to attack.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.Attack(Oddmatics.RozWorld.API.Generic.Level.ITile)">
            <summary>
            Attacks an ITile.
            </summary>
            <param name="tile">The ITile to attack.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.EntityUpdate">
            <summary>
            Performs individual Entity-related thought updates and processes.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.Interact(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Interacts with this Entity.
            </summary>
            <param name="sender">The Player interacting.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.PerformServerAttachment">
            <summary>
            Performs the required attachments to the server.
            
            This function should not be called by anything other than the server.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.PhysicsUpdate">
            <summary>
            Performs physics calculations for updating this Entity.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.TeleportTo(Oddmatics.RozWorld.API.Server.Entities.Entity)">
            <summary>
            Teleports this Entity to a specified target IEntity.
            </summary>
            <param name="target">The target IEntity to teleport to.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.TeleportTo(Oddmatics.RozWorld.API.Generic.Level.WorldLocation)">
            <summary>
            Teleports this Entity to the specified Location.
            </summary>
            <param name="target">The target Location to teleport to.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.TeleportTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Teleport this IEntity to the specified coordinates.
            </summary>
            <param name="segX">The x-coordinate of the target segment.</param>
            <param name="segY">The y-coordinate of the target segment.</param>
            <param name="segZ">The z-coordinate of the target segment.</param>
            <param name="localX">The target local x-coordinate of the segment.</param>
            <param name="localY">The target local y-coordinate of the segment.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Entity.Server_Tick(System.Object,Oddmatics.RozWorld.API.Server.Event.ServerTickEventArgs)">
            <summary>
            [Event] Server tick elapsed.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.Age">
            <summary>
            Gets the age of this Entity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.AnimationState">
            <summary>
            Gets the animation state of this Entity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.ID">
            <summary>
            Gets the ID of this Entity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.IsControllable">
            <summary>
            Gets whether this Entity can be controlled externally (eg. by IPlugins).
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.IsFlammable">
            <summary>
            Gets whether this Entity is flammable.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.IsOnFire">
            <summary>
            Gets or sets whether this Entity is on fire.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.IsValid">
            <summary>
            Gets whether this Entity is valid (spawned in an IWorld).
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.Location">
            <summary>
            Gets the location of this Entity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.Mass">
            <summary>
            Gets the mass of this Entity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Entity.Velocity">
            <summary>
            Gets or sets the current velocity of this Entity.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.DealDamage(System.Int32,System.Object)">
            <summary>
            Deals damage to this LivingEntity.
            </summary>
            <param name="amount">The amount to damage.</param>
            <param name="cause">The cause of this damage.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Heal(System.Object)">
            <summary>
            Heals this LivingEntity.
            </summary>
            <param name="cause">The cause of this healing.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Heal(System.Int32,System.Object)">
            <summary>
            Heals this LivingEntity by a given amount.
            </summary>
            <param name="amount">The amount to heal.</param>
            <param name="cause">The cause of this healing.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Kill(System.Object)">
            <summary>
            Kills this LivingEntity.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.LivingEntityUpdate">
            <summary>
            [DIRECT INHERITORS ONLY -- ATTACH THIS TO IRWSERVER.TICK EVENT IN YOUR CONSTRUCTOR OR INCLUDE IN UPDATE METHOD]
            Performs updates for status effects and damaging floors etc.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Health">
            <summary>
            Gets or sets the health of this LivingEntity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.IsAlive">
            <summary>
            Gets whether this LivingEntity is alive.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.IsFreezable">
            <summary>
            Gets whether this LivingEntity is freezable.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.IsFrozen">
            <summary>
            Gets or sets whether this LivingEntity is frozen.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.IsPoisoned">
            <summary>
            Gets whether this LivingEntity is poisoned.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.IsStunned">
            <summary>
            Gets whether this LivingEntity is stunned.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Stats">
            <summary>
            Gets the SafeStatHandler for this LivingEntity 
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.DamageTaken">
            <summary>
            Occurs when this LivingEntity takes damage.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Died">
            <summary>
            Occurs when this LivingEntity dies.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.Healed">
            <summary>
            Occurs when this LivingEntity is healed.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.Entities.LivingEntity.HealthChanged">
            <summary>
            Occurs when this LivingEntity's health changes.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Entities.IInventoryCarrier">
            <summary>
            Represents an entity's inventory information.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.IInventoryCarrier.Inventory">
            <summary>
            Gets or sets the IInventory for this IInventoryCarrier.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.IInventoryCarrier.ItemInHand">
            <summary>
            Gets the IItem in this IInventoryCarrier's hand.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.ICommandCaller">
            <summary>
            Represents an object that is capable of issuing server commands.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.ICommandCaller.HasPermission(System.String)">
            <summary>
            Gets whether this ICommandCaller has a certain permission.
            </summary>
            <param name="key">The permission key to check for.</param>
            <returns>True if the permission associated with the given key is granted.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.ICommandCaller.HookChatToCallback(Oddmatics.RozWorld.API.Server.Event.ChatHookCallback)">
            <summary>
            Makes it so that chat messages sent by this ICommandCaller are passed to the specified delegate rather than the game chat.
            </summary>
            <param name="callback">The delegate to pass the message to.</param>
            <returns>A token used to release the callback hook if the hook was successful, -1 if the hook failed.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.ICommandCaller.ReleaseChatHook(System.Int32)">
            <summary>
            Releases the active chat hook and allows this ICommandCaller to resume normal chat usage.
            
            Note: This function will only operate when called when a hook is in progress.
            </summary>
            <param name="token">The token to use in order to verify the hook release.</param>
            <returns>True if the hook was released.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.ICommandCaller.SendMessage(System.String)">
            <summary>
            Sends a generic chat message to this ICommandCaller
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.ICommandCaller.DisplayName">
            <summary>
            Gets the display name of this ICommandCaller.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.ICommandCaller.FormattedName">
            <summary>
            Gets the chat formatted name of this ICommandCaller.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.Ban(System.String)">
            <summary>
            Bans this Player from the server with a specified reason.
            </summary>
            <param name="reason">Provide a reason to this Player for banning them, leave blank for no reason given.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.BanIP(System.String)">
            <summary>
            Bans this Player's IP address from the server with a specified reason.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.HasPermission(System.String)">
            <summary>
            Gets whether this Player has a certain permission by checking its IAccount.
            </summary>
            <param name="key">The permission key to check for.</param>
            <returns>True if the permission associated with the given key is granted.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.HookChatToCallback(Oddmatics.RozWorld.API.Server.Event.ChatHookCallback)">
            <summary>
            Makes it so that chat messages sent by this Player are passed to the specified delegate rather than the game chat.
            </summary>
            <param name="callback">The delegate to pass the message to.</param>
            <returns>A token used to release the callback hook if the hook was successful, -1 if the hook failed.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.Kick(System.String)">
            <summary>
            Kicks this Player from the server with a specified reason.
            </summary>
            <param name="reason">Provide a reason to this Player for kicking them, leave blank for no reason given.</param>
            <returns>True if this Player was kicked.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.ReleaseChatHook(System.Int32)">
            <summary>
            Releases the active chat hook and allows this Player to resume normal chat usage.
            
            Note: This function will only operate when called when a hook is in progress.
            </summary>
            <param name="token">The token to use in order to verify the hook release.</param>
            <returns>True if the hook was released.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.Save(System.String)">
            <summary>
            Saves all player and account info for this Player to the disk.
            
            Note: This function will only operate on real players.
            </summary>
            <param name="destination">Specify a directory to export the data to.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.SendInviteTo(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Sends an invitation from this Player to another Player.
            </summary>
            <param name="recipient">The Player to send the invitation to.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.SendMessage(System.String)">
            <summary>
            Sends a generic chat message to this Player.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.SendPublicMessage(System.String)">
            <summary>
            Sends a chat message from this Player to the public game chat.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.Player.SendPrivateMessageTo(System.String,Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Sends a private message from this Player to another Player.
            </summary>
            <param name="message">The message to send.</param>
            <param name="recipient">The Player to send the private message to.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Account">
            <summary>
            Gets the IAccount associated with this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.AFK">
            <summary>
            Gets or sets the AFK (away from keyboard) status of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.DisplayName">
            <summary>
            Gets or sets the display name of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.FormattedName">
            <summary>
            Gets the chat formatted name of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Inventory">
            <summary>
            Gets this Player's IInventory.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.IsChatBot">
            <summary>
            Gets whether this Player is a chat bot.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.IsRealPlayer">
            <summary>
            Gets whether this Player is a real player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.ItemInHand">
            <summary>
            Gets the IItem in this Player's hand.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Joinable">
            <summary>
            Gets or sets the joinable status of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Online">
            <summary>
            Gets whether this Player is online or not.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Permissions">
            <summary>
            Gets the permissions that this Player has.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Status">
            <summary>
            Gets or sets the status message of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.Visibility">
            <summary>
            Gets or sets the visibility of this Player.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Entities.Player.VisibleOnScoreboard">
            <summary>
            Gets or sets whether this Player shows up on scoreboards.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Game.Economy.ICurrency">
            <summary>
            Represents a currency in the game economy.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Game.Economy.ICurrency.LidName">
            <summary>
            Gets the language string ID for this ICurrency's name.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Game.Economy.ICurrency.PathSmallGuiIcon">
            <summary>
            Gets the small GUI icon path (relative to texture pack directories) for this ICurrency.
            This value is client-side only.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.ITextContainer">
            <summary>
            Represents a control that contains text.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.Control.ITextContainer.Text">
            <summary>
            Gets or sets the text that appears on this ITextContainer.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IInputPreferences">
            <summary>
            Represents input preferences for a player's profile.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.ControlMapping">
            <summary>
            Gets or sets the IControlMapping being used.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.ControlMethod">
            <summary>
            Gets or sets the ControlMethod being used.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.UseCursorInDialogs">
            <summary>
            Gets or sets whether to use the gamepad-controlled cursor in dialogs when left to user preference.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxLeftAnalogXDeadzone">
            <summary>
            Gets or sets the left analog stick's inner deadzone for the x-axis.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxLeftAnalogYDeadzone">
            <summary>
            Gets or sets the left analog stick's inner deadzone for the y-axis.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxLeftTriggerThreshold">
            <summary>
            Gets or sets the left trigger's activation threshold.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxRightAnalogXDeadzone">
            <summary>
            Gets or sets the right analog stick's inner deadzone for the x-axis.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxRightAnalogYDeadzone">
            <summary>
            Gets or sets the right analog stick's inner deadzone for the y-axis.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputPreferences.XboxRightTriggerThreshold">
            <summary>
            Gets or sets the right trigger's activation threshold.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.IRwServer">
            <summary>
            Represents a RozWorld server.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.BroadcastMessage(System.String)">
            <summary>
            Broadcasts a message to all players on this server.
            </summary>
            <param name="message">The message to broadcast.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetCommandDescription(System.String)">
            <summary>
            Gets the description of the specified command.
            </summary>
            <param name="command">The command string.</param>
            <returns>The command's description if it was found, String.Empty otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetCommandsByPlugin(System.String)">
            <summary>
            Gets the commands registered on this IRwServer by a specified plugin as an IList&lt;string&gt; collection.
            </summary>
            <param name="plugin">The name of the plugin.</param>
            <returns>The commands registered on this IRwServer by a specified plugin as an IList&lt;string&gt; collection.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetCommandUsage(System.String)">
            <summary>
            Gets the usage of the specified command.
            </summary>
            <param name="command">The command string.</param>
            <returns>The command's usage if it was found, String.Empty otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetPlayer(System.String)">
            <summary>
            Gets a Player by their display name.
            </summary>
            <param name="name">The display name of the Player.</param>
            <returns>The Player instance of the given display name, null if they are not online.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetPlayerAbsolute(System.String)">
            <summary>
            Gets a Player by their display name, offline or online.
            </summary>
            <param name="name">The display name of the Player.</param>
            <returns>The Player instance of the given display name, null if they do not exist.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetPlayerByUsername(System.String)">
            <summary>
            Gets a Player by their account username.
            </summary>
            <param name="username">The account username of the Player.</param>
            <returns>The Player instance of the given account username, null if they are not online.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetPlayerByUsernameAbs(System.String)">
            <summary>
            Gets a Player by their account username, offline or online.
            </summary>
            <param name="username">The account username of the Player.</param>
            <returns>The Player instance of the given account username, null if they do not exist.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.GetWorld(System.String)">
            <summary>
            Gets an IWorld on this IRwServer by its name.
            </summary>
            <param name="name">The name of the IWorld.</param>
            <returns>The IWorld instance of the given name, null if it does not exist or isn't loaded.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.IsValidEntity(System.UInt16)">
            <summary>
            Checks if an Entity of the given ID is valid (spawned in an IWorld).
            </summary>
            <param name="id">The Entity's ID.</param>
            <returns>True if the Entity is currently valid.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.Kick(Oddmatics.RozWorld.API.Server.Entities.Player,System.String)">
            <summary>
            Kicks a Player from the server by their instance with a specified reason.
            </summary>
            <param name="player">The Player instance.</param>
            <param name="reason">Provide a reason to the Player for kicking them, leave blank for no reason given.</param>
            <returns>True if the Player was kicked.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.Kick(System.String,System.String)">
            <summary>
            Kicks a Player from the server by their display name with a specified reason.
            </summary>
            <param name="name">The display name of the Player.</param>
            <param name="reason">Provide a reason to the Player for kicking them, leave blank for no reason given.</param>
            <returns>True if the Player was kicked.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.RegisterCommand(System.String,Oddmatics.RozWorld.API.Server.Event.CommandSentCallback,System.String,System.String)">
            <summary>
            Attempts to register a command to the specified function.
            </summary>
            <param name="cmd">The command to register.</param>
            <param name="func">The function to bind to the command.</param>
            <param name="description">The description of the command.</param>
            <param name="usage">The usage information for the command.</param>
            <returns>True if the registration was successful.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.Save">
            <summary>
            Saves all data on this server to disk.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.ThrowFatalError(System.String)">
            <summary>
            Safely engages a fatal error, in order to issue a safe server shutdown with cause.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.IRwServer.WorldAvailable(System.String)">
            <summary>
            Checks if there is data for the world of the given name able to be loaded.
            </summary>
            <param name="name">The name of the world</param>
            <returns>True if the world of the given name can be loaded.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.AccountsManager">
            <summary>
            Gets the IAccountsManager instance for this IRwServer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.AutosaveEnabled">
            <summary>
            Gets whether autosave has been enabled on this IRwServer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.AutosaveInterval">
            <summary>
            Gets the interval in which autosave occurs in milliseconds.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.BrowserName">
            <summary>
            Gets the name of this IRwServer that will appear in people's browsers.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.Commands">
            <summary>
            Gets the currently registered commands as an IList&lt;string&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.ContentManager">
            <summary>
            Gets the IContentManager instance for this IRwServer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.EconomySystem">
            <summary>
            Gets the IEconomySystem instance for this IRwServer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.FormattingString">
            <summary>
            Gets the game chat formatting string for this IRwServer.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.GameDifficulty">
            <summary>
            Gets or sets the current game difficulty.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.GameMode">
            <summary>
            Gets the current game mode.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.HostingPort">
            <summary>
            Gets the port that this IRwServer is being hosted on.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.IsLocal">
            <summary>
            Gets whether this IRwServer is running locally (as in, a singleplayer or splitscreen game).
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.IsPaused">
            <summary>
            Gets whether this IRwServer is in a paused state (only applicable if running singleplayer or splitscreen).
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.IsWhitelisted">
            <summary>
            Gets whether this IRwServer is whitelisted.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.Logger">
            <summary>
            Gets the ILogger this IRwServer is using.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.MaxPlayers">
            <summary>
            Gets the maximum amount of players allowed on this IRwServer at once.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.OnlinePlayers">
            <summary>
            Gets a list of the currently online players.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.PermissionAuthority">
            <summary>
            Gets this IRwServer's IPermissionAuthority.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.Plugins">
            <summary>
            Gets the currently installed plugins as an IList&lt;IPlugin&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.RozWorldVersion">
            <summary>
            Gets the target RozWorld version of this server implementation.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.ServerName">
            <summary>
            Gets the name of this server implementation.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.ServerVersion">
            <summary>
            Gets the version of this server implementation.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.SpawnWorldName">
            <summary>
            Gets the name of the IWorld used as the spawn world.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.StatCalculator">
            <summary>
            Gets this IRwServer's default StatCalculator.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.TickRate">
            <summary>
            Gets the tick rate to use for this IRwServer in milliseconds.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IRwServer.WhitelistedPlayers">
            <summary>
            Gets a list of the whitelisted players.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.AccountSignUp">
            <summary>
            Occurs on a successful sign up attempt.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.PlayerChatting">
            <summary>
            Occurs when a chat message is sent by a player.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.PlayerCommanding">
            <summary>
            Occurs when a command is sent by a player.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.PlayerLogIn">
            <summary>
            Occurs when a player logs in.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.Pause">
            <summary>
            Occurs when this IRwServer is paused.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.Started">
            <summary>
            Occurs when this IRwServer has fully started.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.Starting">
            <summary>
            Occurs when this IRwServer is starting.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.Stopping">
            <summary>
            Occurs when this IRwServer is stopping.
            </summary>
        </member>
        <member name="E:Oddmatics.RozWorld.API.Server.IRwServer.Tick">
            <summary>
            Occurs when the tick rate has elapsed.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.IClansManager">
            <summary>
            Represents a clan manager for performing various functions on clans.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventHandler">
            <summary>
            Represents the method that will handle the DamageTaken and Healed events of a LivingEntity.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A HealthCauseEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs">
            <summary>
            Provides data for the LivingEntity.DamageTaken and LivingEntity.Healed events.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the HeathCauseEventArgs class with specified properties.
            </summary>
            <param name="causer">The subject causer of the health change, cast as an object.</param>
            <param name="difference">The health change that occurred.</param>
            <param name="newHealth">The new health.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.#ctor(System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the HeathCauseEventArgs class with specified properties.
            </summary>
            <param name="causer">The subject causer of the health change, cast as an object.</param>
            <param name="causedWith">The object used to cause health change, cast as an object.</param>
            <param name="difference">The health change that occurred.</param>
            <param name="newHealth">The new health.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.Causer">
            <summary>
            Gets the object responsible for the health change.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.CausedWith">
            <summary>
            Gets the object that was used to change the health.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.Difference">
            <summary>
            Gets the health change that occurred.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.HealthCauseEventArgs.NewHealth">
            <summary>
            Gets the new health.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Vector">
            <summary>
            Represents a 2D vector.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Vector.#ctor(System.Double,System.Double)">
            <summary>
            Initialises a new instance of the Vector class with a specified angle and magnitude.
            </summary>
            <param name="angle">The angle (in radians); 0 is directly east.</param>
            <param name="magnitude">The magnitude.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Vector.Angle">
            <summary>
            The angle (in radians) of this Vector.
            0 is directly east.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Vector.Magnitude">
            <summary>
            The speed of this Vector.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Level.ISegment">
            <summary>
            Represents a segment in a world.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Level.WorldLocation">
            <summary>
            Represents a location inside a world.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.#ctor(System.Double,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WorldLocation class with the specified local and segment coordinates.
            </summary>
            <param name="localX">The local x-coordinate.</param>
            <param name="localY">The local y-coordinate.</param>
            <param name="segX">The segment's x-coordinate.</param>
            <param name="segY">The segment's y-coordinate.</param>
            <param name="segZ">The segment's z-coordinate.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.#ctor(System.Double,System.Double,System.Int32,System.Int32,System.Int32,Oddmatics.RozWorld.API.Generic.Level.IWorld)">
            <summary>
            Initialises a new instance of the WorldLocation class with the specified local and segment coordinates in a given IWorld.
            </summary>
            <param name="localX">The local x-coordinate.</param>
            <param name="localY">The local y-coordinate.</param>
            <param name="segX">The segment's x-coordinate.</param>
            <param name="segY">The segment's y-coordinate.</param>
            <param name="segZ">The segment's z-coordinate.</param>
            <param name="world">The IWorld these coordinates are inside of.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.LocalX">
            <summary>
            Gets the x-coordinate of this WorldLocation within a segment.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.LocalY">
            <summary>
            Gets the y-coordinate of this WorldLocation within a segment.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.SegmentX">
            <summary>
            Gets the x-coordinate of the segment that this WorldLocation is inside of.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.SegmentY">
            <summary>
            Gets the y-coordinate of the segment that this WorldLocation is inside of.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.SegmentZ">
            <summary>
            Gets the z-coordinate of the segment that this WorldLocation is inside of.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.WorldLocation.World">
            <summary>
            Gets the IWorld that this WorldLocation is inside of.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.ITextBox">
            <summary>
            Represents a text box control on the interface.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.IControlContainer">
            <summary>
            Represents an object that may contain interface controls.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IControlContainer.Controls">
            <summary>
            Gets the child controls of this IControlContainer as a List&lt;IControl&gt; collection.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventHandler">
            <summary>
            Represents the method that will handle the PlayerChatting event of an IRwServer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A PlayerChatEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs">
            <summary>
            Provides data for the IRwServer.PlayerChatting event.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.ICancellable">
            <summary>
            Represents a cancellable event.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.ICancellable.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be cancelled.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs.UseServerFormatting">
            <summary>
            Gets or sets a value indicating whether to use the server's formatting for this chat message.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs.#ctor(Oddmatics.RozWorld.API.Server.Entities.Player,System.String,System.Boolean)">
            <summary>
            Initialises a new instance of the PlayerChatEventArgs class with a Player, a message string and (optional) whether to use server chat formatting.
            </summary>
            <param name="player">The Player object that sent the chat message.</param>
            <param name="message">The chat message being sent.</param>
            <param name="useServerFormatting">Whether server chat formatting is to be used for this message.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be cancelled.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs.Message">
            <summary>
            Gets the message being sent in the chat.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerChatEventArgs.Player">
            <summary>
            Gets the instance of the Player that sent the message.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Level.Weather">
            <summary>
            Specifies constants defining the current weather in a world.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Level.Weather.Clear">
            <summary>
            Represents clear weather.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Level.Weather.Lightning">
            <summary>
            Represents dull weather with lightning.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Level.Weather.Rain">
            <summary>
            Represents dull weather with rain.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Level.Weather.Snow">
            <summary>
            Represents clear weather with snow.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.IForm">
            <summary>
            Represents a single interface form for the RozWorld client's interface handler.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IForm.MoveSelectionDown">
            <summary>
            Selects the control below the currently selected control.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IForm.MoveSelectionLeft">
            <summary>
            Selects the control to the left of the currently selected control.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IForm.MoveSelectionRight">
            <summary>
            Selects the control to the right of the currently selected control.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IForm.MoveSelectionUp">
            <summary>
            Selects the control above the currently selected control.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IForm.Active">
            <summary>
            Gets or sets whether this IForm is active.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IForm.Location">
            <summary>
            Gets or sets the Location of this IForm.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IForm.Name">
            <summary>
            Gets or sets the name of this IForm.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IForm.Parent">
            <summary>
            Gets the parent IInterfaceHandler of this IForm.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IForm.PersistentInputFocus">
            <summary>
            Gets or sets whether this IForm should maintain persistent input focus.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IControlMapping">
            <summary>
            Represents the control mapping scheme for a player's profile.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Input.IControlMapping.SetToDefaults">
            <summary>
            Sets this IControlMapping to defaults.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.Controls">
            <summary>
            Gets all the button control assignments as an IDictionary&lt;string, byte&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorMoveDown">
            <summary>
            Gets or sets the control used to move the cursor down.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorMoveLeft">
            <summary>
            Gets or sets the control used to move the cursor left.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorMoveRight">
            <summary>
            Gets or sets the control used to move the cursor right.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorMoveUp">
            <summary>
            Gets or sets the control used to move the cursor up.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorPress">
            <summary>
            Gets or sets the control used to make the cursor press.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.CursorRelease">
            <summary>
            Gets or sets the control used to make the cursor release.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.ScrollDown">
            <summary>
            Gets or sets the control used to scroll down.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IControlMapping.ScrollUp">
            <summary>
            Gets or sets the control used to scroll up.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Level.IWorld">
            <summary>
            Represents a server-side world.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Level.IWorld">
            <summary>
            Represents a world.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.IWorld.Time">
            <summary>
            Gets or sets the time in this IWorld.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.IWorld.Weather">
            <summary>
            Gets or sets the weather in this IWorld.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorld.CreateExplosion(Oddmatics.RozWorld.API.Generic.Level.WorldLocation)">
            <summary>
            Creates an explosion at a given Location in this IWorld.
            </summary>
            <param name="location">The Location to spawn the explosion.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorld.GetEntityById(System.UInt16)">
            <summary>
            Gets an IEntity instance in this IWorld by its ID.
            </summary>
            <param name="id">The ID of the IEntity.</param>
            <returns>The IEntity instance associated with the specified ID.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorld.PutEntity(Oddmatics.RozWorld.API.Server.Entities.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Places an IEntity inside of this IWorld.
            </summary>
            <param name="entity">The IEntity to spawn.</param>
            <param name="segX">The x-coordinate of the target segment.</param>
            <param name="segY">The y-coordinate of the target segment.</param>
            <param name="segZ">The z-coordinate of the target segment.</param>
            <param name="localX">The target local x-coordinate of the segment.</param>
            <param name="localY">The target local y-coordinate of the segment.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorld.PutEntity(Oddmatics.RozWorld.API.Server.Entities.Entity,Oddmatics.RozWorld.API.Generic.Level.WorldLocation)">
            <summary>
            Places an IEntity inside of this IWorld.
            </summary>
            <param name="entity">The IEntity to spawn.</param>
            <param name="location">The target Location to spawn at.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Level.IWorld.DirectoryPath">
            <summary>
            Gets the directory path this IWorld is stored in.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Level.IWorld.Generator">
            <summary>
            Gets the generator used for this IWorld.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Level.IWorld.Name">
            <summary>
            Gets the name of this IWorld.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Level.IWorld.SpawnPoint">
            <summary>
            Gets or sets the spawn point for this IWorld.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Item.IInventory.GetBytes">
            <summary>
            Gets the data for this IInventory for sending to clients.
            </summary>
            <returns>The data of this IInventory as an IList&lt;byte&gt; collection.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Item.IInventory.SlotCount">
            <summary>
            Gets the amount of IItemSlots available in this inventory.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Item.IInventory.Slots">
            <summary>
            Gets the IItemSlots in this IInventory.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.PermissionState">
            <summary>
            Specifies constants defining the state of a permission.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Server.Accounts.PermissionState.Denied">
            <summary>
            Represents that the permission is denied.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Server.Accounts.PermissionState.Granted">
            <summary>
            Represents that the permission is granted.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Server.Accounts.PermissionState.Unset">
            <summary>
            Represents that the permission is neither explicitly granted nor denied.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Size">
            <summary>
            Represents a size in 2D.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Size.Height">
            <summary>
            Gets or sets the height of this Size.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Size.Width">
            <summary>
            Gets or sets the width of this Size.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the Size class with a specified width and height.
            </summary>
            <param name="height">The height.</param>
            <param name="width">The width.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.IInterfaceHandler">
            <summary>
            Represents the main interface handler for the RozWorld client.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IInterfaceHandler.CreateControlFromInterface(System.Type,System.String)">
            <summary>
            Factory method for creating controls from an interface within this API.
            </summary>
            <param name="controlInterface">The interface's Type.</param>
            <param name="name">The name to give the new instance.</param>
            <returns>A new IControl instance of the referred interface Type.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Client.Interface.IInterfaceHandler.CreateForm(System.String)">
            <summary>
            Factory method for creating forms.
            </summary>
            <param name="name">The name to give the new instance.</param>
            <returns>A new IForm instance of the Type specified internally by the client implementation.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IInterfaceHandler.ActiveForm">
            <summary>
            Gets or sets the currently active Form.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Interface.IInterfaceHandler.Forms">
            <summary>
            Gets the child IForm instances of this IInterfaceHandler.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.IPlugin">
            <summary>
            Represents a server plugin, any generic plugins (those for handling commands for instance) should implement
            this interface.
            
            Note that for starting up and shutting down plugins safely, you should attach your functions to the server's
            events rather than use the constructor.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IPlugin.Description">
            <summary>
            Gets the description of this IPlugin.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IPlugin.Name">
            <summary>
            Gets the name of this IPlugin.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.IPlugin.Version">
            <summary>
            Gets the version of this IPlugin.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.CommandSentCallback">
            <summary>
            Represents the method that will handle the command it was registered to being sent.
            </summary>
            <param name="sender">The ICommandCaller that sent the command.</param>
            <param name="args">The argument passed alongside the command.</param>
            <returns>True if the command execution was successful.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Game.Difficulty">
            <summary>
            Specifies constants defining the game difficulty.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.Difficulty.VeryEasy">
            <summary>
            Represents the easiest difficulty.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.Difficulty.Easy">
            <summary>
            Represents the second easiest difficulty.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.Difficulty.Medium">
            <summary>
            Represents intermediate difficulty.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.Difficulty.Difficult">
            <summary>
            Represents the second most difficult difficulty.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Game.Difficulty.VeryDifficult">
            <summary>
            Represents the most difficult difficulty.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.GameCore">
            <summary>
            Represents the unified RozWorld game-core.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.GameCore.VerifyGame">
            <summary>
            Verifies that the loaded core game portions are in sync.
            </summary>
            <returns>True if tests on loaded core portons are in sync and valid.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventHandler">
            <summary>
            Represents the method that will handle the Died event of a LivingEntity.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An EntityDeathEventArgs object that contains the event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventArgs">
            <summary>
            Provides data for the LivingEntity.Died event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventArgs.#ctor(System.Object)">
            <summary>
            Initialises a new instance of the EntityDeathEventArgs class using the specified object as the killer.
            </summary>
            <param name="killer">An instance that represents the killer, cast as an object.</param>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Initialises a new instance of the EntityDeathEventArgs class using the specified objects as the killer and item used.
            </summary>
            <param name="killer">An instance that represents the killer, cast as an object.</param>
            <param name="killedWith">An instance that represents the item used, cast as an object.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventArgs.KilledWith">
            <summary>
            Gets the object that was used to kill this LivingEntity.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.EntityDeathEventArgs.Killer">
            <summary>
            Gets the killer responsible for the death of this LivingEntity.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.IRwClient">
            <summary>
            Represents a RozWorld client.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.ClientName">
            <summary>
            Gets the name of this client implementation.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.ClientVersion">
            <summary>
            Gets the version of this client implementation.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.Input">
            <summary>
            Gets the IInputHandler instance for this IRwClient.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.Interface">
            <summary>
            Gets the IInterfaceHandler instance for this IRwClient.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.Logger">
            <summary>
            Gets the logger this IRwClient is using.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.IRwClient.RozWorldVersion">
            <summary>
            Gets the target RozWorld version of this client implementation.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.GamepadCursorMode">
            <summary>
            Specifies constants defining the enabled state of the gamepad-controlled cursor.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Interface.GamepadCursorMode.Enabled">
            <summary>
            Represents that the gamepad-controlled cursor should be enabled.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Interface.GamepadCursorMode.Disabled">
            <summary>
            Represents that the gamepad-controlled cursor should be disabled.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Interface.GamepadCursorMode.UserPreference">
            <summary>
            Represents that the gamepad-controlled cursor's enabled state should be left to user preference.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.ServerTickEventHandler">
            <summary>
            Represents the method that will handle the Tick event of an IRwServer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ServerTickEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.ServerTickEventArgs">
            <summary>
            Provides data for the IRwServer.Tick event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.ServerTickEventArgs.#ctor(System.Byte)">
            <summary>
            Initialises a new instance of the ServerTickEventArgs class with a delta-time.
            </summary>
            <param name="deltaTime">The delta-time between ticks.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.ServerTickEventArgs.DeltaTime">
            <summary>
            Gets the delta-time since the last Tick event was fired.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.PermissionInfo">
            <summary>
            Represents information regarding a registered permission.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.PermissionInfo.#ctor(System.String,System.String)">
            <summary>
            Initialises a new instance of the PermissionInfo class with a registrar and description.
            </summary>
            <param name="registrar">The registrar of the associated permission.</param>
            <param name="description">The description of the associated permission.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.PermissionInfo.Registrar">
            <summary>
            Gets the registrar of the associated permission. 
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.PermissionInfo.Description">
            <summary>
            Gets the description of the associated permission.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Chat.ChatColour">
            <summary>
            Container for chat colours.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.BLACK">
            <summary>
            Represents the colour black.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.DARK_BLUE">
            <summary>
            Represents the colour dark blue.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.GREEN">
            <summary>
            Represents the colour green.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.TEAL">
            <summary>
            Represents the colour teal.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.DARK_RED">
            <summary>
            Represents the colour dark red.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.PURPLE">
            <summary>
            Represents the colour purple.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.ORANGE">
            <summary>
            Represents the colour orange.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.GREY">
            <summary>
            Represents the colour grey.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.DARK_GREY">
            <summary>
            Represents the colour dark grey.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.BLUE">
            <summary>
            Represents the colour blue.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.LIME">
            <summary>
            Represents the colour lime.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.CYAN">
            <summary>
            Represents the colour cyan.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.RED">
            <summary>
            Represents the colour red.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.MAGENTA">
            <summary>
            Represents the colour magenta.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.YELLOW">
            <summary>
            Represents the colour yellow.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.WHITE">
            <summary>
            Represents the colour white.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.DEFAULT">
            <summary>
            Represents the client's default colour.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.ValidColours">
            <summary>
            Represents all strings that are valid as a ChatColour.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Chat.ChatColour.IsChatColour(System.String)">
            <summary>
            Checks whether a given string is a valid ChatColour.
            </summary>
            <param name="subject">The string subject to check.</param>
            <returns>True if the string is a valid ChatColour.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Game.Economy.ICost">
            <summary>
            Represents the cost of an object (usually an item) by an amount of a given currency.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Game.Economy.ICost.Amount">
            <summary>
            Gets the amount of the given currency required.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Game.Economy.ICost.Currency">
            <summary>
            Gets the type of ICurrency required in this ICost.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventHandler">
            <summary>
            Represents the method that will handle the AccountSignUp event of an IRwServer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An AccountSignUpEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventArgs">
            <summary>
            Provides data for the IRwServer.AccountSignUp event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventArgs.#ctor(System.Net.IPAddress,System.String)">
            <summary>
            Initialises a new instance of the PlayerChatEventArgs class with a source IPAddress and username.
            </summary>
            <param name="sourceIP">The source IPAddress that sent the sign up request.</param>
            <param name="username">The username being registered.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be cancelled.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventArgs.SourceIP">
            <summary>
            Gets the source IPAddress of the sign up.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.AccountSignUpEventArgs.Username">
            <summary>
            Gets the username of the account being registered.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority">
            <summary>
            Represents a server's permission authority.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.CreateNewGroup(System.String)">
            <summary>
            Creates a new blank IPermissionGroup with the given name.
            </summary>
            <param name="name">The name to give the new IPermissionGroup.</param>
            <returns>The newly created IPermissionGroup instance, null if an IPermissionGroup of the same name already exists.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.GetGroup(System.String)">
            <summary>
            Gets an IPermissionGroup by its name.
            </summary>
            <param name="name">The name of the IPermissionGroup to get.</param>
            <returns>The IPermissionGroup associated with the given name, null if no IPermissionGroup was found.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.GetPermissionInfo(System.String)">
            <summary>
            Gets PermissionInfo associated with a permission by its key.
            </summary>
            <param name="key">The permission key to identify by.</param>
            <returns>The associated PermissionInfo instance of the permission, null if the permissions wasn't found.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.RegisterPermission(System.String,System.String)">
            <summary>
            Registers a permission and gives it a description.
            </summary>
            <param name="key">The permission key to register.</param>
            <param name="description">The description of the permission.</param>
            <returns>True if the permission was reigstered.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.Save">
            <summary>
            Saves all permission data to the disk.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.DefaultGroup">
            <summary>
            Gets or sets the default IPermissionGroup for new players.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.GroupNames">
            <summary>
            Gets all IPermissionGroup names available.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IPermissionAuthority.RegisteredPermissions">
            <summary>
            Gets an IList&lt;string&gt; collection representing all registered permissions.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Item.IGradeable">
            <summary>
            Represents a gradeable item.
            This is some sub-data for things such as weapons.
            (eg. 'Flaming Axe II' - a 'Flaming Axe' weapon of grade 2).
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IGradeable.Grade">
            <summary>
            Gets the grade of this IGradeable object.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShopItem">
            <summary>
            Represents an item listing at a shop.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShopItem.Cost">
            <summary>
            Gets the currency costs of this item listing as an IList&lt;ICost&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShopItem.Item">
            <summary>
            Gets the IItem being listed.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.Economy.Shops.IShopItem.Quantity">
            <summary>
            Gets or sets the quantity of the item listed.
            -1 for infinite.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem">
            <summary>
            Represents the economic system for the game, providing factory methods and registery of economy-related classes.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.CreateCost(System.UInt32)">
            <summary>
            Creates a new ICost instance of the default server currency and amount.
            </summary>
            <param name="amount">The amount of cost.</param>
            <returns>A new ICost instance of the default server currency and amount.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.CreateCost(System.String,System.UInt32)">
            <summary>
            Creates a new ICost instance of the given currency (by name) and amount.
            </summary>
            <param name="currencyName">The name of the ICurrency's Type to use.</param>
            <param name="amount">The amount of cost.</param>
            <returns>A new ICost instance of the given ICurrency Type and amount if the name specified is valid, null otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.CreateCost(System.Type,System.UInt32)">
            <summary>
            Creates a new ICost instance of the given currency (by Type) and amount.
            </summary>
            <param name="currencyType">The ICurrency's Type to use.</param>
            <param name="amount">The amount of cost.</param>
            <returns>A new ICost instance of the given ICurrency Type and amount if the Type specified is valid, null otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.CreateShop(System.String)">
            <summary>
            Creates a generic IShop of the given name.
            </summary>
            <param name="name">The name to give the IShop.</param>
            <returns>A new IShop instance using the given name.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.GetCurrencyByName(System.String)">
            <summary>
            Gets a registered ICurrency instance by its Type's name.
            </summary>
            <param name="currencyName">The name of the ICurrency Type.</param>
            <returns>The ICurrency instance of the given Type name if it is registered, null otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.GetCurrencyByType(System.Type)">
            <summary>
            Gets a registered ICurrency instance by its Type.
            </summary>
            <param name="currencyType">The Type of ICurrency.</param>
            <returns>The ICurrency instance of the given Type if it is registered, null otherwise.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.Economy.IEconomySystem.RegisterCurrencyType(System.Type)">
            <summary>
            Registers an ICurrency's Type into this IEconomySystem.
            </summary>
            <param name="currencyType">The Type of ICurrency.</param>
            <returns>True if the Type was registered.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.IPlugin">
            <summary>
            Represents a RozWorld client plugin.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IInputHandler">
            <summary>
            Represents the main input handler for RozWorld client.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputHandler.DefinedControls">
            <summary>
            Gets the currently defined controls as an IList&lt;string&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputHandler.Keyboard">
            <summary>
            Gets the status of the keyboard.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputHandler.Mouse">
            <summary>
            Gets the status of the mouse.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IInputHandler.XboxController">
            <summary>
            Gets the statuses of Xbox controllers as an IList&lt;IXboxController&gt; collection.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler">
            <summary>
            Represents a safe statistics handler to keep all statistics in sync.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.StatCalculator">
            <summary>
            Gets or sets the IStatCalculator for this SafeStatHandler.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.#ctor(Oddmatics.RozWorld.API.Server.Game.IStatCalculator)">
            <summary>
            Initialises a new instance of the Velocity class with a specified speed and angle.
            </summary>
            <param name="statCalc">The IStatCalculator to use.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.Experience">
            <summary>
            Gets the experience points within this SafeStatHandler.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.Level">
            <summary>
            Gets or sets the level within this SafeStatHandler.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.MaxHealth">
            <summary>
            Gets the maximum health within this SafeStatHandler.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.MaxMojo">
            <summary>
            Gets the maximum mojo within this SafeStatHandler.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.SafeStatHandler.RequiredExperience">
            <summary>
            Gets the required experience points within this SafeStatHandler.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Entities.IEntityFactory">
            <summary>
            Provides factory methods for creating entities.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.IEntityFactory.CreateChatBotPlayer(System.String)">
            <summary>
            Creates a new chat bot Player instance (bot only shows up in the chat, no instance in an IWorld).
            </summary>
            <param name="name">The display name to give this chat bot.</param>
            <returns>A new instance of Player, as a chat bot.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.IEntityFactory.CreateEntity(System.String)">
            <summary>
            Creates a new Entity instance of the given type name.
            </summary>
            <param name="type">The type name of Entity to create.</param>
            <returns>A new instance of the Entity of the given type, null if the type doesn't exist.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.IEntityFactory.CreateBotPlayer(System.String)">
            <summary>
            Creates a new bot Player instance.
            </summary>
            <param name="name">The display name to give this Player bot.</param>
            <returns>A new instance of Player, controllable as a bot.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Entities.IEntityFactory.IsLoaded(System.String)">
            <summary>
            Checks whether the specified type of Entity is loaded.
            </summary>
            <param name="type">The Entity type name.</param>
            <returns>True if the Entity of the specified type is loaded.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.RwCore">
            <summary>
            Represents the RozWorld core systems for handling the client and server instances.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.RwCore.Client">
            <summary>
            Gets or sets the current RozWorld client instance.
            
            Setting this must be done at initialisation stage, this can't be set if an instance already exists.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.RwCore.Game">
            <summary>
            Gets the unified game core instance.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.RwCore.LanguageSystem">
            <summary>
            Gets or sets the shared ILanguageSystem instance for RozWorld.
            
            Setting this must be done at initialisation stage, this can't be set if an instance already exists.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.RwCore.Server">
            <summary>
            Gets or sets the current RozWorld server instance.
            
            Setting this must be done at initialisation stage, this can't be set if an instance already exists.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Level.ITile">
            <summary>
            Represents a tile in a world segment.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Level.ITile.GetRelative(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets an ITile relative to this ITile.
            </summary>
            <param name="diffX">The difference on the x-axis relative to this ITile.</param>
            <param name="diffY">The difference on the y-axis relative to this ITile.</param>
            <param name="diffZ">The difference on the z-axis relative to this ITile.</param>
            <param name="generateNonexistent">Whether or not to generate the segment if the ITile specified doesn't exist yet.</param>
            <returns>The ITile at the given</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.ITile.NaturalLightLevel">
            <summary>
            Gets the natural light level of this ITile.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Level.ITile.SourcedLightLevel">
            <summary>
            Gets the sourced (artificial) light level of this ITile.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.PictureBoxSizeMode">
            <summary>
            Specifies constants defining the sizing mode of an image-related control.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Interface.Control.PictureBoxSizeMode.Tiled">
            <summary>
            Represents that the picture should be tiled.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Client.Interface.Control.PictureBoxSizeMode.Stretched">
            <summary>
            Represents that the picture should be stretched.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.IClan">
            <summary>
            Represents a clan formed by players.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IClan.AddMember(System.String)">
            <summary>
            Adds a new member to this IClan by their account name.
            </summary>
            <param name="name">The account name of the Player to add to this IClan.</param>
            <returns>True if the Player of the given account name is in this IClan (regardless of whether they were already in it).</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IClan.AddMember(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Adds a new member to this IClan by their Player instance.
            </summary>
            <param name="player">The Player instance of the player to add.</param>
            <returns>True if the Player is in this IClan (regardless of whether they were already in it).</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IClan.RemoveMember(System.String)">
            <summary>
            Removes a member from this IClan by their account name.
            </summary>
            <param name="name">The account name of the player to remove from this IClan.</param>
            <returns>True if the Player of the given account name is not in this IClan (regardless of whether they were already out of it).</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Game.IClan.RemoveMember(Oddmatics.RozWorld.API.Server.Entities.Player)">
            <summary>
            Removes a member from this IClan by their Player instance.
            </summary>
            <param name="player">The Player instance of the player to remove.</param>
            <returns>True if the Player of the given account name is not in this IClan (regardless of whether they were already out of it).</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.IClan.Members">
            <summary>
            Gets an IList containing all the members of this IClan as Players.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Game.IClan.Public">
            <summary>
            Gets or sets whether or not this IClan is public.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager">
            <summary>
            Represents an account manager for performing various functions on accounts.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.DeleteAccount(Oddmatics.RozWorld.API.Server.Accounts.IAccount)">
            <summary>
            Deletes saved data of a given IAccount.
            </summary>
            <param name="account">The IAccount to delete.</param>
            <returns>True if the was deleted.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.DeleteAccount(System.String)">
            <summary>
            Deletes the saved data of an account of the given name.
            </summary>
            <param name="name">The name of the account to delete.</param>
            <returns>True if the account existed and was deleted.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.GetAccount(System.String)">
            <summary>
            Gets the IAccount associated with the specified name.
            </summary>
            <param name="name">The name of the IAccount to get.</param>
            <returns>The IAccount instance obtained from the given name, null if the name has no association.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.RenameAccount(Oddmatics.RozWorld.API.Server.Accounts.IAccount,System.String)">
            <summary>
            Renames an IAccount to the specified new name.
            </summary>
            <param name="account">The IAccount instance to rename.</param>
            <param name="newName">The new name of the IAccount.</param>
            <returns>True if the IAccount was renamed.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.Save">
            <summary>
            Saves all account data to the disk.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Accounts.IAccountsManager.AccountCount">
            <summary>
            Gets the amount of accounts stored.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Item.IItem">
            <summary>
            Represents a server-side item.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Item.IItem">
            <summary>
            Represents an in game item.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.IsShopItem">
            <summary>
            Gets whether this IItem is a shop item instance.
            If it is, then this IItem should be inactive.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.LidDescription">
            <summary>
            Gets the language string ID for this IItem's description.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.LidName">
            <summary>
            Gets the language string ID for this IItem's name.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.PathListingIcon">
            <summary>
            Gets the listing icon path (relative to texture pack directories) for this IItem.
            This value is client-side only.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.PathPreviewImage">
            <summary>
            Gets the preview image path (relative to texture pack directories) for this IItem.
            This value is client-side only.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Item.IItem.Value">
            <summary>
            Gets the value of this IItem, good for trading or selling to NPCs.
            0 value is unsellable, above that, value is interpretted by the other party.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Location">
            <summary>
            Represents a location on a 2D plane.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Location.X">
            <summary>
            Gets or sets the X coordinate of this Location.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.Location.Y">
            <summary>
            Gets or sets the Y coordinate of this Location.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Location.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialises a new instance of the Location class with a specified set of 2D coordinates.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem">
            <summary>
            Represents the main language handler subsystem for RozWorld.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem.GetLanguageString(System.UInt16)">
            <summary>
            Gets the language string of the specified ID from the default language pack.
            </summary>
            <param name="lid">The language string ID.</param>
            <returns>The string of the specified ID from the default language pack, "undefined" if it was not found.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem.GetLanguageString(System.String,System.UInt16)">
            <summary>
            Gets the language string of the specified ID from the given language pack.
            </summary>
            <param name="pack">The name of the language pack.</param>
            <param name="lid">The language string ID.</param>
            <returns>The string of the specified ID from the given language pack, "undefined" if it was not found.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem.SwitchLanguage(System.String)">
            <summary>
            Switches to the specified language.
            </summary>
            <param name="langCode">The language code.</param>
            <returns>True if the language was able to be switched to.</returns>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem.AvailableLanguages">
            <summary>
            Gets all the available languages (by their codes) as an IList&lt;string&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Generic.Language.ILanguageSystem.AvailablePacks">
            <summary>
            Gets all the available language packs as an IList&lt;string&gt; collection.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IMouse">
            <summary>
            Represents the mouse.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IMouse.ButtonsDown">
            <summary>
            Gets the currently pressed buttons as an IList&lt;byte&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IMouse.ButtonsUp">
            <summary>
            Gets the currently released buttons as an IList&lt;bytegt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IMouse.Location">
            <summary>
            Gets the Location of the mouse pointer.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventHandler">
            <summary>
            Represents the method that will handle the PlayerCommanding event of an IRwServer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A PlayerCommandEventArgs object that contains event data.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventArgs">
            <summary>
            Provides data for the IRwServer.PlayerCommanding event.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventArgs.#ctor(Oddmatics.RozWorld.API.Server.Entities.Player,System.String)">
            <summary>
            Initialises a new instance of the PlayerCommandEventArgs class with a Player and a command string.
            </summary>
            <param name="player">The Player object that sent the command.</param>
            <param name="message">The command being sent.</param>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be cancelled.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventArgs.Command">
            <summary>
            Gets the command being sent.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Server.Event.PlayerCommandEventArgs.Player">
            <summary>
            Gets the instance of the Player that sent the command.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.Event.TrustedPluginCheckCallback">
            <summary>
            Represents the method that will be called when asking the administrator to confirm that they trust a plugin before loading it.
            </summary>
            <param name="file">The filepath of the plugin.</param>
            <returns>True if the administrator has confirmed that they trust the plugin file.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Interface.Control.IButton">
            <summary>
            Represents a button control on the interface.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Level.IWorldGenerator">
            <summary>
            Represents a world generator.
            </summary>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorldGenerator.GenerateSegmentAt(Oddmatics.RozWorld.API.Server.Level.IWorld,System.Int32,System.Int32,System.Int32)">
            <summary>
            Attempts to generate a segment at the given coordinates, as long as the segment has not already been generated.
            </summary>
            <param name="world">The IWorld to generate the chunk in.</param>
            <param name="x">The x-coordinate of the segement to generate.</param>
            <param name="y">The y-coordinate of the segement to generate.</param>
            <param name="z">The z-coordinate of the segement to generate.</param>
            <returns>Whether or not the segment was generated successfully.</returns>
        </member>
        <member name="M:Oddmatics.RozWorld.API.Server.Level.IWorldGenerator.GenerateWorld(System.String)">
            <summary>
            Attempts to generate a new IWorld.
            </summary>
            <param name="name">The name of the IWorld to generate.</param>
            <returns>The generated IWorld if it was generated successfully.</returns>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Server.Game.IStatCalculator">
            <summary>
            Represents a statistics calculator.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Oddmatics.RozWorld.API.Server.Game.IStatCalculator.GetMaxHealth(System.Int32,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Oddmatics.RozWorld.API.Server.Game.IStatCalculator.GetMaxMojo(System.Int32,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Oddmatics.RozWorld.API.Server.Game.IStatCalculator.GetRequiredExp(System.Int32,System.Double)" -->
        <member name="T:Oddmatics.RozWorld.API.Client.Input.IKeyboard">
            <summary>
            Represents the keyboard.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IKeyboard.KeysDown">
            <summary>
            Gets the currently pressed keys as an IList&lt;byte&gt; collection.
            </summary>
        </member>
        <member name="P:Oddmatics.RozWorld.API.Client.Input.IKeyboard.KeysUp">
            <summary>
            Gets the currently released keys as an IList&lt;byte&gt; collection.
            </summary>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Client.Input.InputUpdateCallback">
            <summary>
            Represents the method that will handle an input update.
            </summary>
            <param name="inputType">The input type being updated.</param>
            <param name="status">The new status of the input.</param>
            <param name="extraData">Extra data for the input update, should provide information regarding ports etc.</param>
        </member>
        <member name="T:Oddmatics.RozWorld.API.Generic.LogLevel">
            <summary>
            Specifies constants defining the log level of a given logged message.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.LogLevel.Debug">
            <summary>
            Represents that the message is for debugging purposes.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.LogLevel.Error">
            <summary>
            Represents that the message is reporting an error.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.LogLevel.Fatal">
            <summary>
            Represents that the message is reporting a fatal error.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.LogLevel.Info">
            <summary>
            Represents that the message is stating information.
            </summary>
        </member>
        <member name="F:Oddmatics.RozWorld.API.Generic.LogLevel.Warning">
            <summary>
            Represents that the message is stating a warning.
            </summary>
        </member>
    </members>
</doc>
