<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pencil.Gaming</name>
    </assembly>
    <members>
        <member name="T:Pencil.Gaming.MathUtils.MathHelper">
            <summary>
            Contains common mathematical functions and constants.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.Pi">
            <summary>
            Defines the value of tau divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.PiOver2">
            <summary>
            Defines the value of Pi divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.PiOver3">
            <summary>
            Defines the value of Pi divided by three as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.PiOver4">
            <summary>
            Definesthe value of  Pi divided by four as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.PiOver6">
            <summary>
            Defines the value of Pi divided by six as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.Tau">
            <summary>
            Defines the value of tau as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.TauOver2">
            <summary>
            Defines the value of tau divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.TauOver4">
            <summary>
            Defines the value of tau divided by four as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.TauOver6">
            <summary>
            Defines the value of tau divided by six as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.TauOver8">
            <summary>
            Defines the value of tau divided by eight as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.TauOver12">
            <summary>
            Defines the value of tau divided by twelve as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.ThreePiOver2">
            <summary>
            Defines the value of Pi multiplied by 3 and divided by two as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.E">
            <summary>
            Defines the value of E as a <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.Log10E">
            <summary>
            Defines the base-10 logarithm of E.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.MathHelper.Log2E">
            <summary>
            Defines the base-2 logarithm of E.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.NextPowerOfTwo(System.Int64)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.NextPowerOfTwo(System.Int32)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.NextPowerOfTwo(System.Single)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.NextPowerOfTwo(System.Double)">
            <summary>
            Returns the next power of two that is larger than the specified number.
            </summary>
            <param name="n">The specified number.</param>
            <returns>The next power of two.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.Factorial(System.Int32)">
            <summary>Calculates the factorial of a given natural number.
            </summary>
            <param name="n">The number.</param>
            <returns>n!</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.BinomialCoefficient(System.Int32,System.Int32)">
            <summary>
            Calculates the binomial coefficient <paramref name="n"/> above <paramref name="k"/>.
            </summary>
            <param name="n">The n.</param>
            <param name="k">The k.</param>
            <returns>n! / (k! * (n - k)!)</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.InverseSqrtFast(System.Single)">
            <summary>
            Returns an approximation of the inverse square root of left number.
            </summary>
            <param name="x">A number.</param>
            <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
            <remarks>
            This is an improved implementation of the the method known as Carmack's inverse square root
            which is found in the Quake III source code. This implementation comes from
            http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
            http://www.beyond3d.com/content/articles/8/
            </remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.InverseSqrtFast(System.Double)">
            <summary>
            Returns an approximation of the inverse square root of left number.
            </summary>
            <param name="x">A number.</param>
            <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
            <remarks>
            This is an improved implementation of the the method known as Carmack's inverse square root
            which is found in the Quake III source code. This implementation comes from
            http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
            http://www.beyond3d.com/content/articles/8/
            </remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.ToRadians(System.Single)">
            <summary>
            Convert degrees to radians
            </summary>
            <param name="degrees">An angle in degrees</param>
            <returns>The angle expressed in radians</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.ToDegrees(System.Single)">
            <summary>
            Convert radians to degrees
            </summary>
            <param name="radians">An angle in radians</param>
            <returns>The angle expressed in degrees</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.ToRadians(System.Double)">
            <summary>
            Convert degrees to radians
            </summary>
            <param name="degrees">An angle in degrees</param>
            <returns>The angle expressed in radians</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.MathHelper.ToDegrees(System.Double)">
            <summary>
            Convert radians to degrees
            </summary>
            <param name="radians">An angle in radians</param>
            <returns>The angle expressed in degrees</returns>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Quaternion">
            <summary>
            Represents a Quaternion.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Quaternion.Identity">
            <summary>
            Defines the identity quaternion.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.#ctor(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Construct a new Quaternion from vector and w components
            </summary>
            <param name="v">The vector part</param>
            <param name="w">The w part</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Construct a new Quaternion
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.ToAxisAngle(Pencil.Gaming.MathUtils.Vector3@,System.Single@)">
            <summary>
            Convert the current quaternion to axis angle representation
            </summary>
            <param name="axis">The resultant axis</param>
            <param name="angle">The resultant angle</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.ToAxisAngle">
            <summary>
            Convert this instance to an axis-angle representation.
            </summary>
            <returns>A Vector4 that is the axis-angle representation of this quaternion.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Normalize">
            <summary>
            Scales the Quaternion to unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Conjugate">
            <summary>
            Convert this quaternion to its conjugate
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Add(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Add two quaternions
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>The result of the addition</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Add(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Add two quaternions
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <param name="result">The result of the addition</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Sub(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Sub(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Multiply(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Multiply(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Multiply(Pencil.Gaming.MathUtils.Quaternion@,System.Single,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <param name="result">A new instance containing the result of the calculation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Multiply(Pencil.Gaming.MathUtils.Quaternion,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Conjugate(Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Get the conjugate of the given quaternion
            </summary>
            <param name="q">The quaternion</param>
            <returns>The conjugate of the given quaternion</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Conjugate(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Get the conjugate of the given quaternion
            </summary>
            <param name="q">The quaternion</param>
            <param name="result">The conjugate of the given quaternion</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Invert(Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Get the inverse of the given quaternion
            </summary>
            <param name="q">The quaternion to invert</param>
            <returns>The inverse of the given quaternion</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Invert(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Get the inverse of the given quaternion
            </summary>
            <param name="q">The quaternion to invert</param>
            <param name="result">The inverse of the given quaternion</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Normalize(Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Scale the given quaternion to unit length
            </summary>
            <param name="q">The quaternion to normalize</param>
            <returns>The normalized quaternion</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Normalize(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Quaternion@)">
            <summary>
            Scale the given quaternion to unit length
            </summary>
            <param name="q">The quaternion to normalize</param>
            <param name="result">The normalized quaternion</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.FromAxisAngle(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Build a quaternion from the given axis and angle
            </summary>
            <param name="axis">The axis to rotate about</param>
            <param name="angle">The rotation angle in radians</param>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Slerp(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion,System.Single)">
            <summary>
            Do Spherical linear interpolation between two quaternions 
            </summary>
            <param name="q1">The first quaternion</param>
            <param name="q2">The second quaternion</param>
            <param name="blend">The blend factor</param>
            <returns>A smooth blend between the given quaternions</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Addition(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Subtraction(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Multiply(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Multiply(Pencil.Gaming.MathUtils.Quaternion,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Multiply(System.Single,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="quaternion">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>A new instance containing the result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Equality(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.op_Inequality(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.ToString">
            <summary>
            Returns a System.String that represents the current Quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Equals(System.Object)">
            <summary>
            Compares this object instance to another object for equality. 
            </summary>
            <param name="other">The other object to be used in the comparison.</param>
            <returns>True if both objects are Quaternions of equal value. Otherwise it returns false.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.GetHashCode">
            <summary>
            Provides the hash code for this object. 
            </summary>
            <returns>A hash code formed from the bitwise XOR of this objects members.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.Equals(Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Compares this Quaternion instance to another Quaternion for equality. 
            </summary>
            <param name="other">The other Quaternion to be used in the comparison.</param>
            <returns>True if both instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Quaternion.FromVector(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            creates a quaternion from the vector should mostly be used for debuging
            purposes
            </summary>
            <returns>
            The vector.
            </returns>
            <param name='vector'>
            Vector.
            </param>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.Xyz">
            <summary>
            Gets or sets an Vector3 with the X, Y and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.X">
            <summary>
            Gets or sets the X component of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.Y">
            <summary>
            Gets or sets the Y component of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.Z">
            <summary>
            Gets or sets the Z component of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.W">
            <summary>
            Gets or sets the W component of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.Length">
            <summary>
            Gets the length (magnitude) of the quaternion.
            </summary>
            <seealso cref="P:Pencil.Gaming.MathUtils.Quaternion.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Quaternion.LengthSquared">
            <summary>
            Gets the square of the quaternion length (magnitude).
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector2">
            <summary>Represents a 2D vector using two single-precision floating-point numbers.</summary>
            <remarks>
            The Vector2 structure is suitable for interoperation with unmanaged code requiring two consecutive floats.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.SizeInBytes">
            <summary>
            Defines the size of the Vector2 struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.X">
            <summary>
            The X component of the Vector2.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.Y">
            <summary>
            The Y component of the Vector2.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.UnitX">
            <summary>
            Defines a unit-length Vector2 that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.UnitY">
            <summary>
            Defines a unit-length Vector2 that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.Zero">
            <summary>
            Defines a zero-length Vector2.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.#ctor(System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a new Vector2.
            </summary>
            <param name="x">The x coordinate of the net Vector2.</param>
            <param name="y">The y coordinate of the net Vector2.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.#ctor(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Constructs a new Vector2 from the given Vector2i.
            </summary>
            <param name="v">The Vector2i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Normalize">
            <summary>
            Scales the Vector2 to unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.NormalizeFast">
            <summary>
            Scales the Vector2 to approximately unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Add(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Add(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Subtract(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Subtract(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Multiply(Pencil.Gaming.MathUtils.Vector2,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Multiply(Pencil.Gaming.MathUtils.Vector2@,System.Single,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Multiply(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Multiply(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Divide(Pencil.Gaming.MathUtils.Vector2,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Divide(Pencil.Gaming.MathUtils.Vector2@,System.Single,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Divide(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Divide(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.ComponentMin(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.ComponentMin(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.ComponentMax(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.ComponentMax(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Min(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Max(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Clamp(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Clamp(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Normalize(Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Normalize(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.NormalizeFast(Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.NormalizeFast(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Dot(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Dot(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,System.Single@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.PerpDot(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Calculate the perpendicular dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The perpendicular dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.PerpDot(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,System.Single@)">
            <summary>
            Calculate the perpendicular dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The perpendicular dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Lerp(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Lerp(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,System.Single,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.BaryCentric(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.BaryCentric(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Vector2@,System.Single,System.Single,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
            <param name="a">First input Vector.</param>
            <param name="b">Second input Vector.</param>
            <param name="c">Third input Vector.</param>
            <param name="u">First Barycentric Coordinate.</param>
            <param name="v">Second Barycentric Coordinate.</param>
            <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Transform(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Transform(Pencil.Gaming.MathUtils.Vector2@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Vector2@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Addition(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Adds the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>Result of addition.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Subtraction(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Subtracts the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>Result of subtraction.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Negates the specified instance.
            </summary>
            <param name="vec">Operand.</param>
            <returns>Result of negation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Multiply(Pencil.Gaming.MathUtils.Vector2,System.Single)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Multiply(System.Single,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="scale">Left operand.</param>
            <param name="vec">Right operand.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Division(Pencil.Gaming.MathUtils.Vector2,System.Single)">
            <summary>
            Divides the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand</param>
            <param name="scale">Right operand</param>
            <returns>Result of the division.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Equality(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Compares the specified instances for equality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if both instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.op_Inequality(Pencil.Gaming.MathUtils.Vector2,Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Compares the specified instances for inequality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if both instances are not equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.ToString">
            <summary>
            Returns a System.String that represents the current Vector2.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2.Equals(Pencil.Gaming.MathUtils.Vector2)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.PerpendicularRight">
            <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.PerpendicularLeft">
            <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2.Yx">
            <summary>
            Gets or sets an Vector2 with the Y and X components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector3">
            <summary>
            Represents a 3D vector using three single-precision floating-point numbers.
            </summary>
            <remarks>
            The Vector3 structure is suitable for interoperation with unmanaged code requiring three consecutive floats.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.SizeInBytes">
            <summary>
            Defines the size of the Vector3 struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.X">
            <summary>
            The X component of the Vector3.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.Y">
            <summary>
            The Y component of the Vector3.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.Z">
            <summary>
            The Z component of the Vector3.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.UnitX">
            <summary>
            Defines a unit-length Vector3 that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.UnitY">
            <summary>
            Defines a unit-length Vector3 that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.UnitZ">
            <summary>
            /// Defines a unit-length Vector3 that points towards the Z-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.Zero">
            <summary>
            Defines a zero-length Vector3.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new Vector3.
            </summary>
            <param name="x">The x component of the Vector3.</param>
            <param name="y">The y component of the Vector3.</param>
            <param name="z">The z component of the Vector3.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Constructs a new Vector3 from the given Vector2.
            </summary>
            <param name="v">The Vector2 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Constructs a new Vector3 from the given Vector3.
            </summary>
            <param name="v">The Vector3 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Constructs a new Vector3 from the given Vector4.
            </summary>
            <param name="v">The Vector4 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.#ctor(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Constructs a new Vector3 from the given Vector3i.
            </summary>
            <param name="v">The Vector3i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Normalize">
            <summary>
            Scales the Vector3 to unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.NormalizeFast">
            <summary>
            Scales the Vector3 to approximately unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Add(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Add(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Subtract(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Subtract(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Multiply(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Multiply(Pencil.Gaming.MathUtils.Vector3@,System.Single,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Multiply(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Multiply(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Divide(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Divide(Pencil.Gaming.MathUtils.Vector3@,System.Single,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Divide(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Divide(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.ComponentMin(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.ComponentMin(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.ComponentMax(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.ComponentMax(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Min(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Max(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Clamp(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Clamp(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Normalize(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Normalize(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.NormalizeFast(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.NormalizeFast(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Dot(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Dot(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,System.Single@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Cross(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The cross product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Cross(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The cross product of the two inputs</returns>
            <param name="result">The cross product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Lerp(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Lerp(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,System.Single,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.BaryCentric(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.BaryCentric(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,System.Single,System.Single,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
            <param name="a">First input Vector.</param>
            <param name="b">Second input Vector.</param>
            <param name="c">Third input Vector.</param>
            <param name="u">First Barycentric Coordinate.</param>
            <param name="v">Second Barycentric Coordinate.</param>
            <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformVector(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformVector(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a direction vector by the given Matrix
            Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
            </summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformNormal(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Normal by the given Matrix</summary>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed normal</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformNormal(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a Normal by the given Matrix</summary>
            <remarks>
            This calculates the inverse of the given matrix, use TransformNormalInverse if you
            already have the inverse to avoid this extra calculation
            </remarks>
            <param name="norm">The normal to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed normal</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformNormalInverse(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Normal by the (transpose of the) given Matrix</summary>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <returns>The transformed normal</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformNormalInverse(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a Normal by the (transpose of the) given Matrix</summary>
            <remarks>
            This version doesn't calculate the inverse matrix.
            Use this version if you already have the inverse of the desired transform to hand
            </remarks>
            <param name="norm">The normal to transform</param>
            <param name="invMat">The inverse of the desired transformation</param>
            <param name="result">The transformed normal</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformPosition(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Position by the given Matrix</summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed position</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformPosition(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a Position by the given Matrix</summary>
            <param name="pos">The position to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed position</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Transform(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Vector by the given Matrix</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Transform(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a Vector by the given Matrix</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Transform(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Transform(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformPerspective(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.TransformPerspective(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector3@)">
            <summary>Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.CalculateAngle(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <returns>Angle (in radians) between the vectors.</returns>
            <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.CalculateAngle(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Vector3@,System.Single@)">
            <summary>Calculates the angle (in radians) between two vectors.</summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <param name="result">Angle (in radians) between the vectors.</param>
            <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Addition(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Subtraction(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Multiply(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Multiply(System.Single,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Division(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Equality(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.op_Inequality(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equa lright; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.ToString">
            <summary>
            Returns a System.String that represents the current Vector3.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3.Equals(Pencil.Gaming.MathUtils.Vector3)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Xy">
            <summary>
            Gets or sets an Vector2 with the X and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Xz">
            <summary>
            Gets or sets an Vector2 with the X and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Yx">
            <summary>
            Gets or sets an Vector2 with the Y and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Yz">
            <summary>
            Gets or sets an Vector2 with the Y and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Zx">
            <summary>
            Gets or sets an Vector2 with the Z and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Zy">
            <summary>
            Gets or sets an Vector2 with the Z and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Xzy">
            <summary>
            Gets or sets an Vector3 with the X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Yxz">
            <summary>
            Gets or sets an Vector3 with the Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Yzx">
            <summary>
            Gets or sets an Vector3 with the Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Zxy">
            <summary>
            Gets or sets an Vector3 with the Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3.Zyx">
            <summary>
            Gets or sets an Vector3 with the Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.Graphics.Color4">
            <summary>
            Represents a color with 4 floating-point components (R, G, B, A).
            </summary>
        </member>
        <member name="F:Pencil.Gaming.Graphics.Color4.R">
            <summary>
            The red component of this Color4 structure.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.Graphics.Color4.G">
            <summary>
            The green component of this Color4 structure.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.Graphics.Color4.B">
            <summary>
            The blue component of this Color4 structure.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.Graphics.Color4.A">
            <summary>
            The alpha component of this Color4 structure.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new Color4 structure from the specified components.
            </summary>
            <param name="r">The red component of the new Color4 structure.</param>
            <param name="g">The green component of the new Color4 structure.</param>
            <param name="b">The blue component of the new Color4 structure.</param>
            <param name="a">The alpha component of the new Color4 structure.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructs a new Color4 structure from the specified components.
            </summary>
            <param name="r">The red component of the new Color4 structure.</param>
            <param name="g">The green component of the new Color4 structure.</param>
            <param name="b">The blue component of the new Color4 structure.</param>
            <param name="a">The alpha component of the new Color4 structure.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.ToArgb">
            <summary>
            Converts this color to an integer representation with 8 bits per channel.
            </summary>
            <returns>A <see cref="T:System.Int32"/> that represents this instance.</returns>
            <remarks>This method is intended only for compatibility with System.Drawing. It compresses the color into 8 bits per channel, which means color information is lost.</remarks>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.op_Equality(Pencil.Gaming.Graphics.Color4,Pencil.Gaming.Graphics.Color4)">
            <summary>
            Compares the specified Color4 structures for equality.
            </summary>
            <param name="left">The left-hand side of the comparison.</param>
            <param name="right">The right-hand side of the comparison.</param>
            <returns>True if left is equal to right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.op_Inequality(Pencil.Gaming.Graphics.Color4,Pencil.Gaming.Graphics.Color4)">
            <summary>
            Compares the specified Color4 structures for inequality.
            </summary>
            <param name="left">The left-hand side of the comparison.</param>
            <param name="right">The right-hand side of the comparison.</param>
            <returns>True if left is not equal to right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.Equals(System.Object)">
            <summary>
            Compares whether this Color4 structure is equal to the specified object.
            </summary>
            <param name="obj">An object to compare to.</param>
            <returns>True obj is a Color4 structure with the same components as this Color4; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.GetHashCode">
            <summary>
            Calculates the hash code for this Color4 structure.
            </summary>
            <returns>A System.Int32 containing the hashcode of this Color4 structure.</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.ToString">
            <summary>
            Creates a System.String that describes this Color4 structure.
            </summary>
            <returns>A System.String that describes this Color4 structure.</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.Color4.Equals(Pencil.Gaming.Graphics.Color4)">
            <summary>
            Compares whether this Color4 structure is equal to the specified Color4.
            </summary>
            <param name="other">The Color4 structure to compare to.</param>
            <returns>True if both Color4 structures contain the same components; false otherwise.</returns>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Transparent">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 255, 0).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.AliceBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 248, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.AntiqueWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 235, 215, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Aqua">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Aquamarine">
            <summary>
            Gets the system color with (R, G, B, A) = (127, 255, 212, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Azure">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 255, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Beige">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 245, 220, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Bisque">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 196, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Black">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.BlanchedAlmond">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 235, 205, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Blue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.BlueViolet">
            <summary>
            Gets the system color with (R, G, B, A) = (138, 43, 226, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Brown">
            <summary>
            Gets the system color with (R, G, B, A) = (165, 42, 42, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.BurlyWood">
            <summary>
            Gets the system color with (R, G, B, A) = (222, 184, 135, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.CadetBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (95, 158, 160, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Chartreuse">
            <summary>
            Gets the system color with (R, G, B, A) = (127, 255, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Chocolate">
            <summary>
            Gets the system color with (R, G, B, A) = (210, 105, 30, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Coral">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 127, 80, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.CornflowerBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (100, 149, 237, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Cornsilk">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 248, 220, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Crimson">
            <summary>
            Gets the system color with (R, G, B, A) = (220, 20, 60, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Cyan">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 139, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkCyan">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 139, 139, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkGoldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (184, 134, 11, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkGray">
            <summary>
            Gets the system color with (R, G, B, A) = (169, 169, 169, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 100, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkKhaki">
            <summary>
            Gets the system color with (R, G, B, A) = (189, 183, 107, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkMagenta">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 0, 139, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkOliveGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (85, 107, 47, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkOrange">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 140, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkOrchid">
            <summary>
            Gets the system color with (R, G, B, A) = (153, 50, 204, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkRed">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 0, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkSalmon">
            <summary>
            Gets the system color with (R, G, B, A) = (233, 150, 122, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (143, 188, 139, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkSlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (72, 61, 139, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkSlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (47, 79, 79, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 206, 209, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DarkViolet">
            <summary>
            Gets the system color with (R, G, B, A) = (148, 0, 211, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DeepPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 20, 147, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DeepSkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 191, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DimGray">
            <summary>
            Gets the system color with (R, G, B, A) = (105, 105, 105, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.DodgerBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (30, 144, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Firebrick">
            <summary>
            Gets the system color with (R, G, B, A) = (178, 34, 34, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.FloralWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 240, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.ForestGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (34, 139, 34, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Fuchsia">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Gainsboro">
            <summary>
            Gets the system color with (R, G, B, A) = (220, 220, 220, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.GhostWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (248, 248, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Gold">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 215, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Goldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (218, 165, 32, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Gray">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 128, 128, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Green">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 128, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.GreenYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (173, 255, 47, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Honeydew">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 255, 240, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.HotPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 105, 180, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.IndianRed">
            <summary>
            Gets the system color with (R, G, B, A) = (205, 92, 92, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Indigo">
            <summary>
            Gets the system color with (R, G, B, A) = (75, 0, 130, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Ivory">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 240, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Khaki">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 230, 140, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Lavender">
            <summary>
            Gets the system color with (R, G, B, A) = (230, 230, 250, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LavenderBlush">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 240, 245, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LawnGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (124, 252, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LemonChiffon">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 205, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (173, 216, 230, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightCoral">
            <summary>
            Gets the system color with (R, G, B, A) = (240, 128, 128, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightCyan">
            <summary>
            Gets the system color with (R, G, B, A) = (224, 255, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightGoldenrodYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 250, 210, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (144, 238, 144, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightGray">
            <summary>
            Gets the system color with (R, G, B, A) = (211, 211, 211, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightPink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 182, 193, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightSalmon">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 160, 122, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (32, 178, 170, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightSkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (135, 206, 250, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightSlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (119, 136, 153, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightSteelBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (176, 196, 222, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LightYellow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 224, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Lime">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.LimeGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (50, 205, 50, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Linen">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 240, 230, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Magenta">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Maroon">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 0, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumAquamarine">
            <summary>
            Gets the system color with (R, G, B, A) = (102, 205, 170, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 205, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumOrchid">
            <summary>
            Gets the system color with (R, G, B, A) = (186, 85, 211, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumPurple">
            <summary>
            Gets the system color with (R, G, B, A) = (147, 112, 219, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumSeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (60, 179, 113, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumSlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (123, 104, 238, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumSpringGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 250, 154, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (72, 209, 204, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MediumVioletRed">
            <summary>
            Gets the system color with (R, G, B, A) = (199, 21, 133, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MidnightBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (25, 25, 112, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MintCream">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 255, 250, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.MistyRose">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 225, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Moccasin">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 228, 181, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.NavajoWhite">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 222, 173, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Navy">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 0, 128, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.OldLace">
            <summary>
            Gets the system color with (R, G, B, A) = (253, 245, 230, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Olive">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 128, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.OliveDrab">
            <summary>
            Gets the system color with (R, G, B, A) = (107, 142, 35, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Orange">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 165, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.OrangeRed">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 69, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Orchid">
            <summary>
            Gets the system color with (R, G, B, A) = (218, 112, 214, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PaleGoldenrod">
            <summary>
            Gets the system color with (R, G, B, A) = (238, 232, 170, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PaleGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (152, 251, 152, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PaleTurquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (175, 238, 238, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PaleVioletRed">
            <summary>
            Gets the system color with (R, G, B, A) = (219, 112, 147, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PapayaWhip">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 239, 213, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PeachPuff">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 218, 185, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Peru">
            <summary>
            Gets the system color with (R, G, B, A) = (205, 133, 63, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Pink">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 192, 203, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Plum">
            <summary>
            Gets the system color with (R, G, B, A) = (221, 160, 221, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.PowderBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (176, 224, 230, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Purple">
            <summary>
            Gets the system color with (R, G, B, A) = (128, 0, 128, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Red">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 0, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.RosyBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (188, 143, 143, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.RoyalBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (65, 105, 225, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SaddleBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (139, 69, 19, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Salmon">
            <summary>
            Gets the system color with (R, G, B, A) = (250, 128, 114, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SandyBrown">
            <summary>
            Gets the system color with (R, G, B, A) = (244, 164, 96, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SeaGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (46, 139, 87, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SeaShell">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 245, 238, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Sienna">
            <summary>
            Gets the system color with (R, G, B, A) = (160, 82, 45, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Silver">
            <summary>
            Gets the system color with (R, G, B, A) = (192, 192, 192, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SkyBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (135, 206, 235, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SlateBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (106, 90, 205, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SlateGray">
            <summary>
            Gets the system color with (R, G, B, A) = (112, 128, 144, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Snow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 250, 250, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SpringGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 255, 127, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.SteelBlue">
            <summary>
            Gets the system color with (R, G, B, A) = (70, 130, 180, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Tan">
            <summary>
            Gets the system color with (R, G, B, A) = (210, 180, 140, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Teal">
            <summary>
            Gets the system color with (R, G, B, A) = (0, 128, 128, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Thistle">
            <summary>
            Gets the system color with (R, G, B, A) = (216, 191, 216, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Tomato">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 99, 71, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Turquoise">
            <summary>
            Gets the system color with (R, G, B, A) = (64, 224, 208, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Violet">
            <summary>
            Gets the system color with (R, G, B, A) = (238, 130, 238, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Wheat">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 222, 179, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.White">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 255, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.WhiteSmoke">
            <summary>
            Gets the system color with (R, G, B, A) = (245, 245, 245, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.Yellow">
            <summary>
            Gets the system color with (R, G, B, A) = (255, 255, 0, 255).
            </summary>
        </member>
        <member name="P:Pencil.Gaming.Graphics.Color4.YellowGreen">
            <summary>
            Gets the system color with (R, G, B, A) = (154, 205, 50, 255).
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Matrix">
            <summary>
            Represents a 4x4 Matrix
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Row0">
            <summary>
            Top row of the matrix.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Row1">
            <summary>
            2nd row of the matrix.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Row2">
            <summary>
            3rd row of the matrix.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Row3">
            <summary>
            Bottom row of the matrix.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Identity">
            <summary>
            The identity matrix.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Matrix.Zero">
            <summary>
            The zero matrix.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.#ctor(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="row0">Top row of the matrix.</param>
            <param name="row1">Second row of the matrix.</param>
            <param name="row2">Third row of the matrix.</param>
            <param name="row3">Bottom row of the matrix.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="m00">First item of the first row of the matrix.</param>
            <param name="m01">Second item of the first row of the matrix.</param>
            <param name="m02">Third item of the first row of the matrix.</param>
            <param name="m03">Fourth item of the first row of the matrix.</param>
            <param name="m10">First item of the second row of the matrix.</param>
            <param name="m11">Second item of the second row of the matrix.</param>
            <param name="m12">Third item of the second row of the matrix.</param>
            <param name="m13">Fourth item of the second row of the matrix.</param>
            <param name="m20">First item of the third row of the matrix.</param>
            <param name="m21">Second item of the third row of the matrix.</param>
            <param name="m22">Third item of the third row of the matrix.</param>
            <param name="m23">First item of the third row of the matrix.</param>
            <param name="m30">Fourth item of the fourth row of the matrix.</param>
            <param name="m31">Second item of the fourth row of the matrix.</param>
            <param name="m32">Third item of the fourth row of the matrix.</param>
            <param name="m33">Fourth item of the fourth row of the matrix.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Invert">
            <summary>
            Converts this instance into its inverse.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Transpose">
            <summary>
            Converts this instance into its transpose.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateFromAxisAngle(Pencil.Gaming.MathUtils.Vector3,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <param name="result">A matrix instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateFromAxisAngle(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Build a rotation matrix from the specified axis/angle rotation.
            </summary>
            <param name="axis">The axis to rotate about.</param>
            <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
            <returns>A matrix instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateFromQuaternion(Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Builds a rotation matrix from a quaternion.
            </summary>
            <param name="q">The quaternion to rotate by.</param>
            <param name="result">A matrix instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateFromQuaternion(Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Builds a rotation matrix from a quaternion.
            </summary>
            <param name="q">The quaternion to rotate by.</param>
            <returns>A matrix instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationX(System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationX(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the x-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationY(System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationY(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the y-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationZ(System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Builds a rotation matrix for a rotation around the z-axis.
            </summary>
            <param name="angle">The counter-clockwise angle in radians.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateTranslation(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="x">X translation.</param>
            <param name="y">Y translation.</param>
            <param name="z">Z translation.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateTranslation(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Creates a translation matrix.
            </summary>
            <param name="vector">The translation vector.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="scale">Single scale factor for the x, y, and z axes.</param>
            <returns>A scale matrix.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="scale">Scale factors for the x, y, and z axes.</param>
            <returns>A scale matrix.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="x">Scale factor for the x axis.</param>
            <param name="y">Scale factor for the y axis.</param>
            <param name="z">Scale factor for the z axis.</param>
            <returns>A scale matrix.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="scale">Single scale factor for the x, y, and z axes.</param>
            <param name="result">A scale matrix.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(Pencil.Gaming.MathUtils.Vector3@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="scale">Scale factors for the x, y, and z axes.</param>
            <param name="result">A scale matrix.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateScale(System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a scale matrix.
            </summary>
            <param name="x">Scale factor for the x axis.</param>
            <param name="y">Scale factor for the y axis.</param>
            <param name="z">Scale factor for the z axis.</param>
            <param name="result">A scale matrix.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates an orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates an orthographic projection matrix.
            </summary>
            <param name="width">The width of the projection volume.</param>
            <param name="height">The height of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <rereturns>The resulting Matrix4 instance.</rereturns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates an orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <param name="result">The resulting Matrix4 instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates an orthographic projection matrix.
            </summary>
            <param name="left">The left edge of the projection volume.</param>
            <param name="right">The right edge of the projection volume.</param>
            <param name="bottom">The bottom edge of the projection volume.</param>
            <param name="top">The top edge of the projection volume.</param>
            <param name="zNear">The near edge of the projection volume.</param>
            <param name="zFar">The far edge of the projection volume.</param>
            <returns>The resulting Matrix4 instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates a perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a perspective projection matrix.
            </summary>
            <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
            <param name="aspect">Aspect ratio of the view (width / height)</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>fovy is zero, less than zero or larger than Math.PI</item>
            <item>aspect is negative or zero</item>
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Creates an perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <param name="result">A projection matrix that transforms camera space to raster space</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates an perspective projection matrix.
            </summary>
            <param name="left">Left edge of the view frustum</param>
            <param name="right">Right edge of the view frustum</param>
            <param name="bottom">Bottom edge of the view frustum</param>
            <param name="top">Top edge of the view frustum</param>
            <param name="zNear">Distance to the near clip plane</param>
            <param name="zFar">Distance to the far clip plane</param>
            <returns>A projection matrix that transforms camera space to raster space</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown under the following conditions:
            <list type="bullet">
            <item>zNear is negative or zero</item>
            <item>zFar is negative or zero</item>
            <item>zNear is larger than zFar</item>
            </list>
            </exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.LookAt(Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3,Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Build a world space to camera space matrix
            </summary>
            <param name="eye">Eye (camera) position in world space</param>
            <param name="target">Target position in world space</param>
            <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.LookAt(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Build a world space to camera space matrix
            </summary>
            <param name="eyeX">Eye (camera) position in world space</param>
            <param name="eyeY">Eye (camera) position in world space</param>
            <param name="eyeZ">Eye (camera) position in world space</param>
            <param name="targetX">Target position in world space</param>
            <param name="targetY">Target position in world space</param>
            <param name="targetZ">Target position in world space</param>
            <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
            <returns>A Matrix4 that transforms world space to camera space</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Mult(Pencil.Gaming.MathUtils.Matrix,Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <returns>A new instance that is the result of the multiplication.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Mult(Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Multiplies two instances.
            </summary>
            <param name="left">The left operand of the multiplication.</param>
            <param name="right">The right operand of the multiplication.</param>
            <param name="result">A new instance that is the result of the multiplication.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Mult(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Mult the specified left and right where left is a Vector4 should only be used for debuging
            and seeing if the point you are tryng to draw is in screen space
            </summary>
            <param name='left'>
            Left.
            </param>
            <param name='right'>
            Right.
            </param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Invert(Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Calculate the inverse of the given matrix
            </summary>
            <param name="mat">The matrix to invert</param>
            <param name="result">The inverse of the given matrix if it has one, or the input if it is singular</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the Matrix4 is singular.</exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Invert(Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Calculate the inverse of the given matrix
            </summary>
            <param name="mat">The matrix to invert</param>
            <returns>The inverse of the given matrix if it has one, or the input if it is singular</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the Matrix4 is singular.</exception>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Transpose(Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <returns>The transpose of the given matrix</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Transpose(Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Matrix@)">
            <summary>
            Calculate the transpose of the given matrix
            </summary>
            <param name="mat">The matrix to transpose</param>
            <param name="result">The result of the calculation</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.op_Multiply(Pencil.Gaming.MathUtils.Matrix,Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Matrix multiplication
            </summary>
            <param name="left">left-hand operand</param>
            <param name="right">right-hand operand</param>
            <returns>A new Matrix4 which holds the result of the multiplication</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.op_Equality(Pencil.Gaming.MathUtils.Matrix,Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.op_Inequality(Pencil.Gaming.MathUtils.Matrix,Pencil.Gaming.MathUtils.Matrix)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equal right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.ToString">
            <summary>
            Returns a System.String that represents the current Matrix4.
            </summary>
            <returns>The string representation of the matrix.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare tresult.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Matrix.Equals(Pencil.Gaming.MathUtils.Matrix)">
            <summary>Indicates whether the current matrix is equal to another matrix.</summary>
            <param name="other">An matrix to compare with this matrix.</param>
            <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Determinant">
            <summary>
            Gets the determinant of this matrix.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Column0">
            <summary>
            Gets the first column of this matrix.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Column1">
            <summary>
            Gets the second column of this matrix.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Column2">
            <summary>
            Gets the third column of this matrix.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Column3">
            <summary>
            Gets the fourth column of this matrix.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M11">
            <summary>
            Gets or sets the value at row 1, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M12">
            <summary>
            Gets or sets the value at row 1, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M13">
            <summary>
            Gets or sets the value at row 1, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M14">
            <summary>
            Gets or sets the value at row 1, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M21">
            <summary>
            Gets or sets the value at row 2, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M22">
            <summary>
            Gets or sets the value at row 2, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M23">
            <summary>
            Gets or sets the value at row 2, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M24">
            <summary>
            Gets or sets the value at row 2, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M31">
            <summary>
            Gets or sets the value at row 3, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M32">
            <summary>
            Gets or sets the value at row 3, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M33">
            <summary>
            Gets or sets the value at row 3, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M34">
            <summary>
            Gets or sets the value at row 3, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M41">
            <summary>
            Gets or sets the value at row 4, column 1 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M42">
            <summary>
            Gets or sets the value at row 4, column 2 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M43">
            <summary>
            Gets or sets the value at row 4, column 3 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.M44">
            <summary>
            Gets or sets the value at row 4, column 4 of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the value at a specified row and column.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector3i">
            <summary>
            Represents a 3D vector using three single-precision floating-point numbers.
            </summary>
            <remarks>
            The Vector3i structure is suitable for interoperation with unmanaged code requiring three consecutive floats.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.SizeInBytes">
            <summary>
            Defines the size of the Vector3i struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.X">
            <summary>
            The X component of the Vector3i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.Y">
            <summary>
            The Y component of the Vector3i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.Z">
            <summary>
            The Z component of the Vector3i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.UnitX">
            <summary>
            Defines a unit-length Vector3i that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.UnitY">
            <summary>
            Defines a unit-length Vector3i that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.UnitZ">
            <summary>
            /// Defines a unit-length Vector3i that points towards the Z-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.Zero">
            <summary>
            Defines a zero-length Vector3i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector3i.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.#ctor(System.Int32)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new Vector3i.
            </summary>
            <param name="x">The x component of the Vector3i.</param>
            <param name="y">The y component of the Vector3i.</param>
            <param name="z">The z component of the Vector3i.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.#ctor(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Constructs a new Vector3i from the given Vector2.
            </summary>
            <param name="v">The Vector2 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.#ctor(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Constructs a new Vector3i from the given Vector3i.
            </summary>
            <param name="v">The Vector3i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.#ctor(Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Constructs a new Vector3i from the given Vector4.
            </summary>
            <param name="v">The Vector4 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Add(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Add(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Subtract(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Subtract(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Multiply(Pencil.Gaming.MathUtils.Vector3i,System.Int32)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Multiply(Pencil.Gaming.MathUtils.Vector3i@,System.Int32,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Multiply(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Multiply(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Divide(Pencil.Gaming.MathUtils.Vector3i,System.Int32)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Divide(Pencil.Gaming.MathUtils.Vector3i@,System.Int32,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Divide(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Divide(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.ComponentMin(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.ComponentMin(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.ComponentMax(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.ComponentMax(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Min(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Returns the Vector3i with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3i</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Max(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Returns the Vector3i with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3i</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Clamp(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Clamp(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Dot(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Dot(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,System.Int32@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Cross(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The cross product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Cross(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@)">
            <summary>
            Caclulate the cross (vector) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The cross product of the two inputs</returns>
            <param name="result">The cross product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.CalculateAngle(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Calculates the angle (in radians) between two vectors.
            </summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <returns>Angle (in radians) between the vectors.</returns>
            <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.CalculateAngle(Pencil.Gaming.MathUtils.Vector3i@,Pencil.Gaming.MathUtils.Vector3i@,System.Single@)">
            <summary>Calculates the angle (in radians) between two vectors.</summary>
            <param name="first">The first vector.</param>
            <param name="second">The second vector.</param>
            <param name="result">Angle (in radians) between the vectors.</param>
            <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Addition(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Subtraction(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Multiply(Pencil.Gaming.MathUtils.Vector3i,System.Int32)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Multiply(System.Int32,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Division(Pencil.Gaming.MathUtils.Vector3i,System.Int32)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Equality(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.op_Inequality(Pencil.Gaming.MathUtils.Vector3i,Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equa lright; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.ToString">
            <summary>
            Returns a System.String that represents the current Vector3i.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector3i.Equals(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3i.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector3i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector3i.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Xy">
            <summary>
            Gets or sets an Vector2 with the X and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Xz">
            <summary>
            Gets or sets an Vector2 with the X and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Yx">
            <summary>
            Gets or sets an Vector2 with the Y and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Yz">
            <summary>
            Gets or sets an Vector2 with the Y and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Zx">
            <summary>
            Gets or sets an Vector2 with the Z and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Zy">
            <summary>
            Gets or sets an Vector2 with the Z and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Xzy">
            <summary>
            Gets or sets an Vector3i with the X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Yxz">
            <summary>
            Gets or sets an Vector3i with the Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Yzx">
            <summary>
            Gets or sets an Vector3i with the Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Zxy">
            <summary>
            Gets or sets an Vector3i with the Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector3i.Zyx">
            <summary>
            Gets or sets an Vector3i with the Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector2i">
            <summary>Represents a 2D vector using two single-precision inting-point numbers.</summary>
            <remarks>
            The Vector2i structure is suitable for interoperation with unmanaged code requiring two consecutive ints.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.SizeInBytes">
            <summary>
            Defines the size of the Vector2i struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.X">
            <summary>
            The X component of the Vector2i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.Y">
            <summary>
            The Y component of the Vector2i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.UnitX">
            <summary>
            Defines a unit-length Vector2i that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.UnitY">
            <summary>
            Defines a unit-length Vector2i that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.Zero">
            <summary>
            Defines a zero-length Vector2i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector2i.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.#ctor(System.Int32)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a new Vector2i.
            </summary>
            <param name="x">The x coordinate of the net Vector2i.</param>
            <param name="y">The y coordinate of the net Vector2i.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Add(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Add(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Subtract(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Subtract(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Multiply(Pencil.Gaming.MathUtils.Vector2i,System.Int32)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Multiply(Pencil.Gaming.MathUtils.Vector2i@,System.Int32,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Multiply(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Multiply(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Divide(Pencil.Gaming.MathUtils.Vector2i,System.Int32)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Divide(Pencil.Gaming.MathUtils.Vector2i@,System.Int32,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Divide(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Divide(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.ComponentMin(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.ComponentMin(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.ComponentMax(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.ComponentMax(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Min(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Max(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
            <param name="left">Left operand</param>
            <param name="right">Right operand</param>
            <returns>The minimum Vector3</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Clamp(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Clamp(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Dot(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Dot(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,System.Int32@)">
            <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.PerpDot(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Calculate the perpendicular dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The perpendicular dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.PerpDot(Pencil.Gaming.MathUtils.Vector2i@,Pencil.Gaming.MathUtils.Vector2i@,System.Int32@)">
            <summary>
            Calculate the perpendicular dot (scalar) product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The perpendicular dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Addition(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Adds the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>Result of addition.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Subtraction(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Subtracts the specified instances.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>Result of subtraction.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Negates the specified instance.
            </summary>
            <param name="vec">Operand.</param>
            <returns>Result of negation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Multiply(Pencil.Gaming.MathUtils.Vector2i,System.Int32)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Multiply(System.Int32,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Multiplies the specified instance by a scalar.
            </summary>
            <param name="scale">Left operand.</param>
            <param name="vec">Right operand.</param>
            <returns>Result of multiplication.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Division(Pencil.Gaming.MathUtils.Vector2i,System.Int32)">
            <summary>
            Divides the specified instance by a scalar.
            </summary>
            <param name="vec">Left operand</param>
            <param name="scale">Right operand</param>
            <returns>Result of the division.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Equality(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Compares the specified instances for equality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if both instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.op_Inequality(Pencil.Gaming.MathUtils.Vector2i,Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Compares the specified instances for inequality.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if both instances are not equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.ToString">
            <summary>
            Returns a System.String that represents the current Vector2i.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector2i.Equals(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2i.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector2i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector2i.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.PerpendicularRight">
            <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.PerpendicularLeft">
            <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector2i.Yx">
            <summary>
            Gets or sets an Vector2i with the Y and X components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector4i">
            <summary>Represents a 4D vector using four single-precision inting-point numbers.</summary>
            <remarks>
            The Vector4i structure is suitable for interoperation with unmanaged code requiring four consecutive ints.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.SizeInBytes">
            <summary>
            Defines the size of the Vector4i struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.X">
            <summary>
            The X component of the Vector4i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.Y">
            <summary>
            The Y component of the Vector4i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.Z">
            <summary>
            The Z component of the Vector4i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.W">
            <summary>
            The W component of the Vector4i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.UnitX">
            <summary>
            Defines a unit-length Vector4i that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.UnitY">
            <summary>
            Defines a unit-length Vector4i that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.UnitZ">
            <summary>
            Defines a unit-length Vector4i that points towards the Z-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.UnitW">
            <summary>
            Defines a unit-length Vector4i that points towards the W-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.Zero">
            <summary>
            Defines a zero-length Vector4i.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4i.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(System.Int32)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new Vector4i.
            </summary>
            <param name="x">The x component of the Vector4i.</param>
            <param name="y">The y component of the Vector4i.</param>
            <param name="z">The z component of the Vector4i.</param>
            <param name="w">The w component of the Vector4i.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Constructs a new Vector4i from the given Vector2i.
            </summary>
            <param name="v">The Vector2i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Constructs a new Vector4i from the given Vector3i.
            The w component is initialized to 0.
            </summary>
            <param name="v">The Vector3i to copy components from.</param>
            <remarks><seealso cref="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(Pencil.Gaming.MathUtils.Vector3i,System.Int32)"/></remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(Pencil.Gaming.MathUtils.Vector3i,System.Int32)">
            <summary>
            Constructs a new Vector4i from the specified Vector3i and w component.
            </summary>
            <param name="v">The Vector3i to copy components from.</param>
            <param name="w">The w component of the new Vector4i.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.#ctor(Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Constructs a new Vector4i from the given Vector4i.
            </summary>
            <param name="v">The Vector4i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Sub(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Sub(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Mult(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the multiplication</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Mult(Pencil.Gaming.MathUtils.Vector4i@,System.Int32,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Div(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the division</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Div(Pencil.Gaming.MathUtils.Vector4i@,System.Int32,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Add(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Add(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Subtract(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Subtract(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Multiply(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Multiply(Pencil.Gaming.MathUtils.Vector4i@,System.Int32,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Multiply(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Multiply(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Divide(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Divide(Pencil.Gaming.MathUtils.Vector4i@,System.Int32,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Divide(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Divide(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Min(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Min(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Max(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Max(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Clamp(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Clamp(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Dot(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Dot(Pencil.Gaming.MathUtils.Vector4i@,Pencil.Gaming.MathUtils.Vector4i@,System.Int32@)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Addition(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Subtraction(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Multiply(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Multiply(System.Int32,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Division(Pencil.Gaming.MathUtils.Vector4i,System.Int32)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Equality(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Inequality(Pencil.Gaming.MathUtils.Vector4i,Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equa lright; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Explicit(Pencil.Gaming.MathUtils.Vector4i)~System.Int32*">
            <summary>
            Returns a pointer to the first element of the specified instance.
            </summary>
            <param name="v">The instance.</param>
            <returns>A pointer to the first element of v.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.op_Explicit(Pencil.Gaming.MathUtils.Vector4i)~System.IntPtr">
            <summary>
            Returns a pointer to the first element of the specified instance.
            </summary>
            <param name="v">The instance.</param>
            <returns>A pointer to the first element of v.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.ToString">
            <summary>
            Returns a System.String that represents the current Vector4i.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4i.Equals(Pencil.Gaming.MathUtils.Vector4i)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4i.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4i.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4i.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4i.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xy">
            <summary>
            Gets or sets an Vector2i with the X and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xz">
            <summary>
            Gets or sets an Vector2i with the X and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xw">
            <summary>
            Gets or sets an Vector2i with the X and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yx">
            <summary>
            Gets or sets an Vector2i with the Y and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yz">
            <summary>
            Gets or sets an Vector2i with the Y and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yw">
            <summary>
            Gets or sets an Vector2i with the Y and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zx">
            <summary>
            Gets or sets an Vector2i with the Z and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zy">
            <summary>
            Gets or sets an Vector2i with the Z and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zw">
            <summary>
            Gets an Vector2i with the Z and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wx">
            <summary>
            Gets or sets an Vector2i with the W and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wy">
            <summary>
            Gets or sets an Vector2i with the W and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wz">
            <summary>
            Gets or sets an Vector2i with the W and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xyz">
            <summary>
            Gets or sets an Vector3i with the X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xyw">
            <summary>
            Gets or sets an Vector3i with the X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xzy">
            <summary>
            Gets or sets an Vector3i with the X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xzw">
            <summary>
            Gets or sets an Vector3i with the X, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xwy">
            <summary>
            Gets or sets an Vector3i with the X, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xwz">
            <summary>
            Gets or sets an Vector3i with the X, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yxz">
            <summary>
            Gets or sets an Vector3i with the Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yxw">
            <summary>
            Gets or sets an Vector3i with the Y, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yzx">
            <summary>
            Gets or sets an Vector3i with the Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yzw">
            <summary>
            Gets or sets an Vector3i with the Y, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Ywx">
            <summary>
            Gets or sets an Vector3i with the Y, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Ywz">
            <summary>
            Gets an Vector3i with the Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zxy">
            <summary>
            Gets or sets an Vector3i with the Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zxw">
            <summary>
            Gets or sets an Vector3i with the Z, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zyx">
            <summary>
            Gets or sets an Vector3i with the Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zyw">
            <summary>
            Gets or sets an Vector3i with the Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zwx">
            <summary>
            Gets or sets an Vector3i with the Z, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zwy">
            <summary>
            Gets or sets an Vector3i with the Z, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wxy">
            <summary>
            Gets or sets an Vector3i with the W, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wxz">
            <summary>
            Gets or sets an Vector3i with the W, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wyx">
            <summary>
            Gets or sets an Vector3i with the W, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wyz">
            <summary>
            Gets or sets an Vector3i with the W, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wzx">
            <summary>
            Gets or sets an Vector3i with the W, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wzy">
            <summary>
            Gets or sets an Vector3i with the W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xywz">
            <summary>
            Gets or sets an Vector4i with the X, Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xzyw">
            <summary>
            Gets or sets an Vector4i with the X, Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xzwy">
            <summary>
            Gets or sets an Vector4i with the X, Z, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xwyz">
            <summary>
            Gets or sets an Vector4i with the X, W, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Xwzy">
            <summary>
            Gets or sets an Vector4i with the X, W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yxzw">
            <summary>
            Gets or sets an Vector4i with the Y, X, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yxwz">
            <summary>
            Gets or sets an Vector4i with the Y, X, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yyzw">
            <summary>
            Gets an Vector4i with the Y, Y, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yywz">
            <summary>
            Gets an Vector4i with the Y, Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yzxw">
            <summary>
            Gets or sets an Vector4i with the Y, Z, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Yzwx">
            <summary>
            Gets or sets an Vector4i with the Y, Z, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Ywxz">
            <summary>
            Gets or sets an Vector4i with the Y, W, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Ywzx">
            <summary>
            Gets or sets an Vector4i with the Y, W, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zxyw">
            <summary>
            Gets or sets an Vector4i with the Z, X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zxwy">
            <summary>
            Gets or sets an Vector4i with the Z, X, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zyxw">
            <summary>
            Gets or sets an Vector4i with the Z, Y, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zywx">
            <summary>
            Gets or sets an Vector4i with the Z, Y, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zwxy">
            <summary>
            Gets or sets an Vector4i with the Z, W, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zwyx">
            <summary>
            Gets or sets an Vector4i with the Z, W, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Zwzy">
            <summary>
            Gets an Vector4i with the Z, W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wxyz">
            <summary>
            Gets or sets an Vector4i with the W, X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wxzy">
            <summary>
            Gets or sets an Vector4i with the W, X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wyxz">
            <summary>
            Gets or sets an Vector4i with the W, Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wyzx">
            <summary>
            Gets or sets an Vector4i with the W, Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wzxy">
            <summary>
            Gets or sets an Vector4i with the W, Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wzyx">
            <summary>
            Gets or sets an Vector4i with the W, Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4i.Wzyw">
            <summary>
            Gets an Vector4i with the W, Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.MathUtils.Vector4">
            <summary>Represents a 4D vector using four single-precision floating-point numbers.</summary>
            <remarks>
            The Vector4 structure is suitable for interoperation with unmanaged code requiring four consecutive floats.
            </remarks>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.SizeInBytes">
            <summary>
            Defines the size of the Vector4 struct in bytes.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.X">
            <summary>
            The X component of the Vector4.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.Y">
            <summary>
            The Y component of the Vector4.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.Z">
            <summary>
            The Z component of the Vector4.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.W">
            <summary>
            The W component of the Vector4.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.UnitX">
            <summary>
            Defines a unit-length Vector4 that points towards the X-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.UnitY">
            <summary>
            Defines a unit-length Vector4 that points towards the Y-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.UnitZ">
            <summary>
            Defines a unit-length Vector4 that points towards the Z-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.UnitW">
            <summary>
            Defines a unit-length Vector4 that points towards the W-axis.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.Zero">
            <summary>
            Defines a zero-length Vector4.
            </summary>
        </member>
        <member name="F:Pencil.Gaming.MathUtils.Vector4.One">
            <summary>
            Defines an instance with all components set to 1.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="value">The value that will initialize this instance.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a new Vector4.
            </summary>
            <param name="x">The x component of the Vector4.</param>
            <param name="y">The y component of the Vector4.</param>
            <param name="z">The z component of the Vector4.</param>
            <param name="w">The w component of the Vector4.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector2)">
            <summary>
            Constructs a new Vector4 from the given Vector2.
            </summary>
            <param name="v">The Vector2 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector2i)">
            <summary>
            Constructs a new Vector4 from the given Vector2.i
            </summary>
            <param name="v">The Vector2i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3i)">
            <summary>
            Constructs a new Vector4 from the given Vector3i.
            The w component is initialized to 0.
            </summary>
            <param name="v">The Vector3i to copy components from.</param>
            <remarks><seealso cref="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3,System.Single)"/></remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3)">
            <summary>
            Constructs a new Vector4 from the given Vector3.
            The w component is initialized to 0.
            </summary>
            <param name="v">The Vector3 to copy components from.</param>
            <remarks><seealso cref="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3,System.Single)"/></remarks>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3i,System.Single)">
            <summary>
            Constructs a new Vector4 from the specified Vector3i and w component.
            </summary>
            <param name="v">The Vector3 to copy components from.</param>
            <param name="w">The w component of the new Vector4.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector3,System.Single)">
            <summary>
            Constructs a new Vector4 from the specified Vector3 and w component.
            </summary>
            <param name="v">The Vector3 to copy components from.</param>
            <param name="w">The w component of the new Vector4.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Constructs a new Vector4 from the given Vector4.
            </summary>
            <param name="v">The Vector4 to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.#ctor(Pencil.Gaming.MathUtils.Vector4i)">
            <summary>
            Constructs a new Vector4 from the given Vector4i.
            </summary>
            <param name="v">The Vector4i to copy components from.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Normalize">
            <summary>
            Scales the Vector4 to unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.NormalizeFast">
            <summary>
            Scales the Vector4 to approximately unit length.
            </summary>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Sub(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Sub(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Mult(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the multiplication</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Mult(Pencil.Gaming.MathUtils.Vector4@,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Multiply a vector and a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the multiplication</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Div(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <returns>Result of the division</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Div(Pencil.Gaming.MathUtils.Vector4@,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Divide a vector by a scalar
            </summary>
            <param name="a">Vector operand</param>
            <param name="f">Scalar operand</param>
            <param name="result">Result of the division</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Add(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result of operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Add(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">Left operand.</param>
            <param name="b">Right operand.</param>
            <param name="result">Result of operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Subtract(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>Result of subtraction</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Subtract(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Subtract one Vector from another
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">Result of subtraction</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Multiply(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Multiply(Pencil.Gaming.MathUtils.Vector4@,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Multiply(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Multiply(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Divide(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Divide(Pencil.Gaming.MathUtils.Vector4@,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Divide(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Divide(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
            <param name="vector">Left operand.</param>
            <param name="scale">Right operand.</param>
            <param name="result">Result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Min(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise minimum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Min(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise minimum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Max(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <returns>The component-wise maximum</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Max(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
            <param name="a">First operand</param>
            <param name="b">Second operand</param>
            <param name="result">The component-wise maximum</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Clamp(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <returns>The clamped vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Clamp(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
            <param name="vec">Input vector</param>
            <param name="min">Minimum vector</param>
            <param name="max">Maximum vector</param>
            <param name="result">The clamped vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Normalize(Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Normalize(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Scale a vector to unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.NormalizeFast(Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <returns>The normalized vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.NormalizeFast(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Scale a vector to approximately unit length
            </summary>
            <param name="vec">The input vector</param>
            <param name="result">The normalized vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Dot(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <returns>The dot product of the two inputs</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Dot(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,System.Single@)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="left">First operand</param>
            <param name="right">Second operand</param>
            <param name="result">The dot product of the two inputs</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Lerp(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Lerp(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
            <param name="a">First input vector</param>
            <param name="b">Second input vector</param>
            <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
            <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.BaryCentric(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4,System.Single,System.Single)">
            <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
            <param name="a">First input Vector</param>
            <param name="b">Second input Vector</param>
            <param name="c">Third input Vector</param>
            <param name="u">First Barycentric Coordinate</param>
            <param name="v">Second Barycentric Coordinate</param>
            <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.BaryCentric(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Vector4@,System.Single,System.Single,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
            <param name="a">First input Vector.</param>
            <param name="b">Second input Vector.</param>
            <param name="c">Third input Vector.</param>
            <param name="u">First Barycentric Coordinate.</param>
            <param name="v">Second Barycentric Coordinate.</param>
            <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Transform(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Matrix)">
            <summary>Transform a Vector by the given Matrix</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <returns>The transformed vector</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Transform(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Matrix@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>Transform a Vector by the given Matrix</summary>
            <param name="vec">The vector to transform</param>
            <param name="mat">The desired transformation</param>
            <param name="result">The transformed vector</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Transform(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Transform(Pencil.Gaming.MathUtils.Vector4@,Pencil.Gaming.MathUtils.Quaternion@,Pencil.Gaming.MathUtils.Vector4@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Addition(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Adds two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Subtraction(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Subtracts two instances.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_UnaryNegation(Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Negates an instance.
            </summary>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Multiply(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Multiply(System.Single,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Multiplies an instance by a scalar.
            </summary>
            <param name="scale">The scalar.</param>
            <param name="vec">The instance.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Division(Pencil.Gaming.MathUtils.Vector4,System.Single)">
            <summary>
            Divides an instance by a scalar.
            </summary>
            <param name="vec">The instance.</param>
            <param name="scale">The scalar.</param>
            <returns>The result of the calculation.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Equality(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Compares two instances for equality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left equals right; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Inequality(Pencil.Gaming.MathUtils.Vector4,Pencil.Gaming.MathUtils.Vector4)">
            <summary>
            Compares two instances for inequality.
            </summary>
            <param name="left">The first instance.</param>
            <param name="right">The second instance.</param>
            <returns>True, if left does not equa lright; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Explicit(Pencil.Gaming.MathUtils.Vector4)~System.Single*">
            <summary>
            Returns a pointer to the first element of the specified instance.
            </summary>
            <param name="v">The instance.</param>
            <returns>A pointer to the first element of v.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.op_Explicit(Pencil.Gaming.MathUtils.Vector4)~System.IntPtr">
            <summary>
            Returns a pointer to the first element of the specified instance.
            </summary>
            <param name="v">The instance.</param>
            <returns>A pointer to the first element of v.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.ToString">
            <summary>
            Returns a System.String that represents the current Vector4.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Pencil.Gaming.MathUtils.Vector4.Equals(Pencil.Gaming.MathUtils.Vector4)">
            <summary>Indicates whether the current vector is equal to another vector.</summary>
            <param name="other">A vector to compare with this vector.</param>
            <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Item(System.Int32)">
            <summary>
            Gets or sets the value at the index of the Vector.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Length">
            <summary>
            Gets the length (magnitude) of the vector.
            </summary>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4.LengthFast"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.LengthFast">
            <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
            <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4.LengthSquared"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.LengthSquared">
            <summary>
            Gets the square of the vector length (magnitude).
            </summary>
            <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
            <see cref="P:Pencil.Gaming.MathUtils.Vector4.Length"/>
            <seealso cref="P:Pencil.Gaming.MathUtils.Vector4.LengthFast"/>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xy">
            <summary>
            Gets or sets an Vector2 with the X and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xz">
            <summary>
            Gets or sets an Vector2 with the X and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xw">
            <summary>
            Gets or sets an Vector2 with the X and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yx">
            <summary>
            Gets or sets an Vector2 with the Y and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yz">
            <summary>
            Gets or sets an Vector2 with the Y and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yw">
            <summary>
            Gets or sets an Vector2 with the Y and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zx">
            <summary>
            Gets or sets an Vector2 with the Z and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zy">
            <summary>
            Gets or sets an Vector2 with the Z and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zw">
            <summary>
            Gets an Vector2 with the Z and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wx">
            <summary>
            Gets or sets an Vector2 with the W and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wy">
            <summary>
            Gets or sets an Vector2 with the W and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wz">
            <summary>
            Gets or sets an Vector2 with the W and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xyz">
            <summary>
            Gets or sets an Vector3 with the X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xyw">
            <summary>
            Gets or sets an Vector3 with the X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xzy">
            <summary>
            Gets or sets an Vector3 with the X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xzw">
            <summary>
            Gets or sets an Vector3 with the X, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xwy">
            <summary>
            Gets or sets an Vector3 with the X, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xwz">
            <summary>
            Gets or sets an Vector3 with the X, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yxz">
            <summary>
            Gets or sets an Vector3 with the Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yxw">
            <summary>
            Gets or sets an Vector3 with the Y, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yzx">
            <summary>
            Gets or sets an Vector3 with the Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yzw">
            <summary>
            Gets or sets an Vector3 with the Y, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Ywx">
            <summary>
            Gets or sets an Vector3 with the Y, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Ywz">
            <summary>
            Gets an Vector3 with the Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zxy">
            <summary>
            Gets or sets an Vector3 with the Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zxw">
            <summary>
            Gets or sets an Vector3 with the Z, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zyx">
            <summary>
            Gets or sets an Vector3 with the Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zyw">
            <summary>
            Gets or sets an Vector3 with the Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zwx">
            <summary>
            Gets or sets an Vector3 with the Z, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zwy">
            <summary>
            Gets or sets an Vector3 with the Z, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wxy">
            <summary>
            Gets or sets an Vector3 with the W, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wxz">
            <summary>
            Gets or sets an Vector3 with the W, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wyx">
            <summary>
            Gets or sets an Vector3 with the W, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wyz">
            <summary>
            Gets or sets an Vector3 with the W, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wzx">
            <summary>
            Gets or sets an Vector3 with the W, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wzy">
            <summary>
            Gets or sets an Vector3 with the W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xywz">
            <summary>
            Gets or sets an Vector4 with the X, Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xzyw">
            <summary>
            Gets or sets an Vector4 with the X, Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xzwy">
            <summary>
            Gets or sets an Vector4 with the X, Z, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xwyz">
            <summary>
            Gets or sets an Vector4 with the X, W, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Xwzy">
            <summary>
            Gets or sets an Vector4 with the X, W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yxzw">
            <summary>
            Gets or sets an Vector4 with the Y, X, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yxwz">
            <summary>
            Gets or sets an Vector4 with the Y, X, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yyzw">
            <summary>
            Gets an Vector4 with the Y, Y, Z, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yywz">
            <summary>
            Gets an Vector4 with the Y, Y, W, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yzxw">
            <summary>
            Gets or sets an Vector4 with the Y, Z, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Yzwx">
            <summary>
            Gets or sets an Vector4 with the Y, Z, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Ywxz">
            <summary>
            Gets or sets an Vector4 with the Y, W, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Ywzx">
            <summary>
            Gets or sets an Vector4 with the Y, W, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zxyw">
            <summary>
            Gets or sets an Vector4 with the Z, X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zxwy">
            <summary>
            Gets or sets an Vector4 with the Z, X, W, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zyxw">
            <summary>
            Gets or sets an Vector4 with the Z, Y, X, and W components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zywx">
            <summary>
            Gets or sets an Vector4 with the Z, Y, W, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zwxy">
            <summary>
            Gets or sets an Vector4 with the Z, W, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zwyx">
            <summary>
            Gets or sets an Vector4 with the Z, W, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Zwzy">
            <summary>
            Gets an Vector4 with the Z, W, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wxyz">
            <summary>
            Gets or sets an Vector4 with the W, X, Y, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wxzy">
            <summary>
            Gets or sets an Vector4 with the W, X, Z, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wyxz">
            <summary>
            Gets or sets an Vector4 with the W, Y, X, and Z components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wyzx">
            <summary>
            Gets or sets an Vector4 with the W, Y, Z, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wzxy">
            <summary>
            Gets or sets an Vector4 with the W, Z, X, and Y components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wzyx">
            <summary>
            Gets or sets an Vector4 with the W, Z, Y, and X components of this instance.
            </summary>
        </member>
        <member name="P:Pencil.Gaming.MathUtils.Vector4.Wzyw">
            <summary>
            Gets an Vector4 with the W, Z, Y, and W components of this instance.
            </summary>
        </member>
        <member name="T:Pencil.Gaming.Graphics.GL">
            <summary>
            OpenGL bindings for .NET, implementing the full OpenGL API, including extensions.
            </summary>
            <remarks>
            <para>
            This class contains all OpenGL enums and functions defined in the latest OpenGL specification.
            The official .spec files can be found at: http://opengl.org/registry/.
            </para>
            <para> A valid OpenGL context must be created before calling any OpenGL function.</para>
            <para>
            Use the GL.Load and GL.LoadAll methods to prepare function entry points prior to use. To maintain
            cross-platform compatibility, this must be done for both core and extension functions. The GameWindow
            and the GLControl class will take care of this automatically.
            </para>
            <para>
            You can use the GL.SupportsExtension method to check whether any given category of extension functions
            exists in the current OpenGL context. Keep in mind that different OpenGL contexts may support different
            extensions, and under different entry points. Always check if all required extensions are still supported
            when changing visuals or pixel formats.
            </para>
            <para>
            You may retrieve the entry point for an OpenGL function using the GL.GetDelegate method.
            </para>
            </remarks>
            <see href="http://opengl.org/registry/"/>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.PointParameter(Pencil.Gaming.Graphics.PointSpriteCoordOriginParameter)">
            <summary>
            Helper function that defines the coordinate origin of the Point Sprite.
            </summary>
            <param name="param">
            A Pencil.Gaming.Graphics.GL.PointSpriteCoordOriginParameter token,
            denoting the origin of the Point Sprite.
            </param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenBuffer">
            <summary>[requires: v1.5]
            Generates a single buffer object name
            </summary>
            <returns>The generated buffer object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteBuffer(System.Int32)">
            <summary>[requires: v1.5]
            Deletes a single buffer object
            </summary>
            <param name="id">The buffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteBuffer(System.UInt32)">
            <summary>[requires: v1.5]
            Deletes a single buffer object
            </summary>
            <param name="id">The buffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenFramebuffer">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Generates a single framebuffer object name
            </summary>
            <returns>The generated framebuffer object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteFramebuffer(System.Int32)">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Deletes a single framebuffer object
            </summary>
            <param name="id">The framebuffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteFramebuffer(System.UInt32)">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Deletes a single framebuffer object
            </summary>
            <param name="id">The framebuffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenProgramPipeline">
            <summary>[requires: v4.1 and ARB_separate_shader_objects]
            Generates a single single pipeline object name
            </summary>
            <returns>The generated single pipeline object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteProgramPipeline(System.Int32)">
            <summary>[requires: v4.1 and ARB_separate_shader_objects]
            Deletes a single program pipeline object
            </summary>
            <param name="id">The program pipeline object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteProgramPipeline(System.UInt32)">
            <summary>[requires: v4.1 and ARB_separate_shader_objects]
            Deletes a single program pipeline object
            </summary>
            <param name="id">The program pipeline object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenQuery">
            <summary>[requires: v1.5]
            Generates a single query object name
            </summary>
            <returns>The generated query object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteQuery(System.Int32)">
            <summary>[requires: v1.5]
            Deletes a single query object
            </summary>
            <param name="id">The query object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteQuery(System.UInt32)">
            <summary>
            Deletes a single query object
            </summary>
            <param name="id">The query object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenRenderbuffer">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Generates a single renderbuffer object name
            </summary>
            <returns>The generated renderbuffer object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteRenderbuffer(System.Int32)">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Deletes a single renderbuffer object
            </summary>
            <param name="id">The renderbuffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteRenderbuffer(System.UInt32)">
            <summary>[requires: v3.0 and ARB_framebuffer_object]
            Deletes a single renderbuffer object
            </summary>
            <param name="id">The renderbuffer object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenSampler">
            <summary>
            Generates a single sampler object name
            </summary>
            <returns>The generated sampler object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteSampler(System.Int32)">
            <summary>
            Deletes a single sampler object
            </summary>
            <param name="id">The sampler object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteSampler(System.UInt32)">
            <summary>
            Deletes a single sampler object
            </summary>
            <param name="id">The sampler object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenTexture">
            <summary>[requires: v1.1]
            Generate a single texture name
            </summary>
            <returns>The generated texture name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteTexture(System.Int32)">
            <summary>[requires: v1.1]
            Delete a single texture name
            </summary>
            <param name="id">The texture to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteTexture(System.UInt32)">
            <summary>[requires: v1.1]
            Delete a single texture name
            </summary>
            <param name="id">The texture to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenTransformFeedback">
            <summary>[requires: v1.2 and ARB_transform_feedback2]
            Generates a single transform feedback object name
            </summary>
            <returns>The generated transform feedback object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteTransformFeedback(System.Int32)">
            <summary>[requires: v1.2 and ARB_transform_feedback2]
            Deletes a single transform feedback object
            </summary>
            <param name="id">The transform feedback object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteTransformFeedback(System.UInt32)">
            <summary>[requires: v1.2 and ARB_transform_feedback2]
            Deletes a single transform feedback object
            </summary>
            <param name="id">The transform feedback object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.GenVertexArray">
            <summary>[requires: v3.0 and ARB_vertex_array_object]
            Generates a single vertex array object name
            </summary>
            <returns>The generated vertex array object name</returns>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteVertexArray(System.Int32)">
            <summary>[requires: v3.0 and ARB_vertex_array_object]
            Deletes a single vertex array object
            </summary>
            <param name="id">The vertex array object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.DeleteVertexArray(System.UInt32)">
            <summary>[requires: v3.0 and ARB_vertex_array_object]
            Deletes a single vertex array object
            </summary>
            <param name="id">The vertex array object to be deleted</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.String)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="path">The path to the image file.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.String,System.Boolean)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="path">The path to the image file.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.String,System.Boolean,Pencil.Gaming.Graphics.TextureMinFilter,Pencil.Gaming.Graphics.TextureMagFilter)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="path">The path to the image file.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
            <param name="tmin">The required minimization filter.</param>
            <param name="tmag">The required maximalization filter.</param> 
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.IO.Stream)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="file">The stream containing the image bytes.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.IO.Stream,System.Boolean)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="file">The stream containing the image bytes.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.IO.Stream,System.Boolean,Pencil.Gaming.Graphics.TextureMinFilter,Pencil.Gaming.Graphics.TextureMagFilter)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="file">The stream containing the image bytes.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
            <param name="tmin">The required minimization filter.</param>
            <param name="tmag">The required maximalization filter.</param> 
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.Drawing.Bitmap)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="bmp">The Bitmap representing the image.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="bmp">The Bitmap representing the image.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadImage(System.Drawing.Bitmap,System.Boolean,Pencil.Gaming.Graphics.TextureMinFilter,Pencil.Gaming.Graphics.TextureMagFilter)">
            <summary>
            Loads an image.
            </summary>
            <returns>The OpenGL ID representing the image.</returns>
            <param name="bmp">The Bitmap representing the image.</param>
            <param name="square">A value indicating whether the image is a power of two texture.</param>
            <param name="tmin">The required minimization filter.</param>
            <param name="tmag">The required maximalization filter.</param> 
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.DrawCylinderArrays(System.Int32)">
            <summary>
            Draws the cylinder.
            </summary>
            <param name="lod">Level of detail with which the cylinder was created.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.CreateCylinder(Pencil.Gaming.MathUtils.Vector4[]@,Pencil.Gaming.MathUtils.Vector3[]@,System.Single,System.Single,System.Int32)">
            <summary>
            Generates a cylinder.
            </summary>
            <param name="vertices">Vertices.</param>
            <param name="normals">Normals.</param>
            <param name="height">Height.</param>
            <param name="radius">Radius.</param>
            <param name="lod">Level of detail.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.FloatArrayFromVerticesNormalsInterleaved(Pencil.Gaming.MathUtils.Vector4[],Pencil.Gaming.MathUtils.Vector3[],Pencil.Gaming.MathUtils.Vector2[])">
            <summary>
            Creates a float array from vertices and normals.
            This function is compatible with delegate type <see cref="!:TArrayFromRetrievedData"/>.
            The returned value is an interleaved float array, i.e. { v, n, v, n ... }.
            </summary>
            <returns>The the float array, in which the elements are interleaved.</returns>
            <param name="vertices">Vertices.</param>
            <param name="normals">Normals.</param>
            <param name="texCoords">Tex coords (can be empty).</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.FloatArrayFromVerticesNormalsTexCoordsInterleaved(Pencil.Gaming.MathUtils.Vector4[],Pencil.Gaming.MathUtils.Vector3[],Pencil.Gaming.MathUtils.Vector2[])">
            <summary>
            Creates a float array from vertices, normals and tex coords.
            This function is compatible with delegate type <see cref="!:TArrayFromRetrievedData"/>.
            The returned value is an interleaved float array, i.e. { v, n, t, v, n t, ... }.
            </summary>
            <returns>The the float array, in which the elements are interleaved.</returns>
            <param name="vertices">Vertices.</param>
            <param name="normals">Normals.</param>
            <param name="texCoords">Tex coords.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.FloatArrayFromVerticesNormals(Pencil.Gaming.MathUtils.Vector4[],Pencil.Gaming.MathUtils.Vector3[],Pencil.Gaming.MathUtils.Vector2[])">
            <summary>
            Creates a float array from vertices and normals.
            This function is compatible with delegate type <see cref="!:TArrayFromRetrievedData"/>.
            The returned value is a non-interleaved float array, i.e. { v, v, n, n, ... }.
            </summary>
            <returns>The the float array.</returns>
            <param name="vertices">Vertices.</param>
            <param name="normals">Normals.</param>
            <param name="texCoords">Tex coords (can be empty).</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.FloatArrayFromVerticesNormalsTexCoords(Pencil.Gaming.MathUtils.Vector4[],Pencil.Gaming.MathUtils.Vector3[],Pencil.Gaming.MathUtils.Vector2[])">
            <summary>
            Creates a float array from vertices, normals and tex coords.
            This function is compatible with delegate type <see cref="!:TArrayFromRetrievedData"/>.
            The returned value is a non-interleaved float array, i.e. { v, v, n, n, t, t, ... }.
            </summary>
            <returns>The the float array.</returns>
            <param name="vertices">Vertices.</param>
            <param name="normals">Normals.</param>
            <param name="texCoords">Tex coords.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel(System.String,Pencil.Gaming.MathUtils.Vector4[]@,Pencil.Gaming.MathUtils.Vector3[]@,Pencil.Gaming.MathUtils.Vector2[]@,System.Int32[]@)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">Path to .obj file.</param>
            <param name="verticesOut">Vertices out.</param>
            <param name="normalsOut">Normals out.</param>
            <param name="tCoordsOut">Texture coords out.</param>
            <param name="indicesOut">Indices out.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel(System.String,Pencil.Gaming.MathUtils.Vector4[]@,Pencil.Gaming.MathUtils.Vector3[]@,Pencil.Gaming.MathUtils.Vector2[]@,System.Int32[]@,System.Boolean)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">Path to .obj file.</param>
            <param name="verticesOut">Vertices out.</param>
            <param name="normalsOut">Normals out.</param>
            <param name="tCoordsOut">Texture coords out.</param>
            <param name="indicesOut">Indices out.</param>
            <param name="optimize">A value indicating whether indices should be optimized (less memory-usage, longer load time).</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel(System.IO.Stream,Pencil.Gaming.MathUtils.Vector4[]@,Pencil.Gaming.MathUtils.Vector3[]@,Pencil.Gaming.MathUtils.Vector2[]@,System.Int32[]@)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="file">The bytes resembling a .obj file.</param>
            <param name="verticesOut">Vertices out.</param>
            <param name="normalsOut">Normals out.</param>
            <param name="tCoordsOut">Texture coords out.</param>
            <param name="indicesOut">Indices out.</param>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel``1(System.String,System.Int32[]@,``0[]@,Pencil.Gaming.Graphics.TArrayFromRetrievedData{``0})">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">Path to .obj file.</param>
            <param name="indicesOutArr">Indices out.</param>
            <param name="outArr">The array of Ts, as the given function is applied to the model data.</param>
            <param name="func">Func.</param>
            <typeparam name="T">The type of the required data.</typeparam>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel``1(System.String,System.Int32[]@,``0[]@,Pencil.Gaming.Graphics.TArrayFromRetrievedData{``0},System.Boolean)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">Path to .obj file.</param>
            <param name="indicesOutArr">Indices out.</param>
            <param name="outArr">The array of Ts, as the given function is applied to the model data.</param>
            <param name="func">Func.</param>
            <param name="optimize">A value indicating whether indices should be optimized (less memory-usage, longer load time).</param>
            <typeparam name="T">The type of the required data.</typeparam>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel``1(System.IO.Stream,System.Int32[]@,``0[]@,Pencil.Gaming.Graphics.TArrayFromRetrievedData{``0})">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">The bytes resembling a .obj file.</param>
            <param name="indicesOutArr">Indices out.</param>
            <param name="outArr">The array of Ts, as the given function is applied to the model data.</param>
            <param name="func">Func.</param>
            <typeparam name="T">The type of the required data.</typeparam>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel``1(System.IO.Stream,System.Int32[]@,``0[]@,Pencil.Gaming.Graphics.TArrayFromRetrievedData{``0},System.Boolean)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">The bytes resembling a .obj file.</param>
            <param name="indicesOutArr">Indices out.</param>
            <param name="outArr">The array of Ts, as the given function is applied to the model data.</param>
            <param name="func">Func.</param>
            <param name="optimize">A value indicating whether indices should be optimized (less memory-usage, longer load time).</param>
            <typeparam name="T">The type of the required data.</typeparam>
        </member>
        <member name="M:Pencil.Gaming.Graphics.GL.Utils.LoadModel(System.IO.Stream,Pencil.Gaming.MathUtils.Vector4[]@,Pencil.Gaming.MathUtils.Vector3[]@,Pencil.Gaming.MathUtils.Vector2[]@,System.Int32[]@,System.Boolean)">
            <summary>
            Loads a wavefront model.
            </summary>
            <param name="path">The bytes resembling a .obj file.</param>
            <param name="verticesOut">Vertices out.</param>
            <param name="normalsOut">Normals out.</param>
            <param name="tCoordsOut">Texture coords out.</param>
            <param name="indicesOut">Indices out.</param>
            <param name="optimize">A value indicating whether indices should be optimized (less memory-usage, longer load time).</param>
        </member>
        <member name="T:Pencil.Gaming.DualQuaternion">
            <summary>
            Dual quaternion class represents a dual quaternion which an represent multiple transfromations
            in a in single structure an alternative to a 4x4 matrix 
            </summary>
        </member>
        <member name="M:Pencil.Gaming.DualQuaternion.#ctor(Pencil.Gaming.MathUtils.Quaternion,Pencil.Gaming.MathUtils.Quaternion)">
            <summary>
            Initializes a new instance of the 
            not public since it could be confusing as to what 
            this could refer to<see cref="T:Pencil.Gaming.DualQuaternion"/> class.
            </summary>
            <param name="real">
            Real.
            </param>
            <param name="dual">
            Dual.
            </param>
        </member>
    </members>
</doc>
